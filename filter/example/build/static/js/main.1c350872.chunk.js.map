{"version":3,"sources":["webpack:///../dist/Styles/main.scss?079b","../../dist/Styles/main.scss","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/types/AutoCompleteComponent.js","../../src/types/DateTimeComponent.js","../../src/types/TextComponents.js","../../src/drawer/RightDrawer.js","../../src/drawer/LeftDrawer.js","../../src/panel/SavedFilters.js","../../src/panel/MainFilterPanel.js","../../src/index.js","App.js","index.js"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","AutoComplete","useState","useEffect","setAutoAcompleteArr","autoCompleteDiv","autoCompleteArr","item","validationClass","className","key","React","Form","label","id","checked","data-testid","onChange","role","onClick","handleClose","disable","closeIcon","displayValue","selectedValues","onSelect","selectedList","selectedItem","FieldComponent","setFieldComponentArr","fieldComponentDiv","fieldComponentArr","defaultChecked","field","disabled","value","TextComponents","setTextComponentArr","textComponentDiv","textComponentArr","defaultValue","autoCompleteArray","deleteAutoCompleteElement","createAutoCompleteArray","handleAutoCompleteEnabled","dateTimesArray","deleteDateTimeElement","handleDateTimeEnabled","createDateTimeArray","textComponentsArray","handleTextComponentEnabled","deleteTextComponentElement","createTextComponentsArray","RightDrawer","setApplyFilterWarning","setApplyFilterWariningClassname","setWarningLabel","setSaveFilterWarning","setShowSavePopup","setRecentFilterShow","setFilterShow","savedFilters","localStorage","JSON","recent","filterArray","style","display","recentFilterShow","filterShow","enabled","dataType","addToday","addTomorrow","addThisMonth","addForteenDays","addSevenDays","addThisWeek","addThirtyDays","lastDayChange","nextDayChange","variant","openShowSavePopUp","applyfilterWarningClassName","resetDrawer","showSavePopup","warningLabel","htmlFor","setSaveFilterName","registersaveFilterName","emptyFilterWarning","emptyFilterClassName","saveWarningClassName","saveWarningLabel","showSavePopUp","addSavedFilters","filterCount","applyFilter","saveFilter","LeftDrawer","setLeftDrawData","setLeftDrawTemp","accordianHeads","leftDrawData","Accordion","showUpArrow","showDownArrow","setShowUpArrow","setShowDownArrow","fontWeight","weight","as","Card","eventKey","fieldHeads","normalHeads","required","placeholder","filteredList","searchKey","leftDrawTemp","filterData","fromLeftToRight","SavedFilters","listRef","useRef","listHandler","event","setShowFilter","document","savedFilter","marginLeft","ref","handleListFilter","showFilter","MainFilterPanel","setChipArray","setCountShow","setListFilter","chipCount","chipArray","chips","onSelectSavedFilter","addingToFavourite","countShow","Filter","setFilterData","count","autoCompletesArray","setFilterCount","closeDrawer","setApplyFilter","it","tip","index","setAutoCompletesArray","aut","fit","dateTimeArray","fieldArray","setDateTimesArray","filters","setDateTimesValueArray","deleteItem","textComponentArray","setTextComponentsArray","setApplyFilterChip","getValueOfDate","dateValue","date","Date","Intl","year","month","day","hour","minute","seconds","dateTimeFormat","autoComplete","text","tempArr","arrays","arr","items","fil","objectArray","saveTempDateTimeArray","saved","filter","column","handleHideDropdown","handleClickOutside","useComponentVisible","showApplyFilter","setShowSavePopUp","setSaveWarningLabel","setSaveWarningClassName","setEmptyFilterClassName","setEmptyFilterWarning","validated","warning","tempObj","obj","autoCompletesValueArray","dateTimesValueArray","textComponentsValueArray","objec","newItem","valueItem","dateTime","textComponent","valueArray","autoCompleteValueArray","index_","setAutoCompletesValueArray","dateTimeValueArray","tempArray","fieldName","fieldValue","todayDate","dated","fromDate","toDate","today","from","to","parseInt","item_","arr_","textComponentValueArray","textItem","setTextComponentsValueArray","showDrawer","applyFilterChip","addAppliedFilters","typeName","returnOptions","dt","appliedFilters","App","airport","airportGroup","FilterData","types","dataSource","appliedFilter","console","log","ReactDOM","render","getElementById"],"mappings":";suHAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,IAIC,kBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPN,EAAIC,EAASK,GAI1BF,EAAOG,QAAUN,EAAQO,QAAU,I,oBChBnCD,EADkC,EAAQ,GAChCE,EAA4B,IAE9BC,KAAK,CAACN,EAAOC,EAAI,uhQAA4hQ,KAErjQD,EAAOG,QAAUA,G,4MCGJ,IAAII,EAAE,oBAAoBC,QAAQA,OAAOC,IAAIC,EAAEH,EAAEC,OAAOC,IAAI,iBAAiB,MAAME,EAAEJ,EAAEC,OAAOC,IAAI,gBAAgB,MAAMG,EAAEL,EAAEC,OAAOC,IAAI,kBAAkB,MAAMI,EAAEN,EAAEC,OAAOC,IAAI,qBAAqB,MAAMK,EAAEP,EAAEC,OAAOC,IAAI,kBAAkB,MAAMM,EAAER,EAAEC,OAAOC,IAAI,kBAAkB,MAAMO,EAAET,EAAEC,OAAOC,IAAI,iBAAiB,MAAMQ,EAAEV,EAAEC,OAAOC,IAAI,oBAAoB,MAAMS,EAAEX,EAAEC,OAAOC,IAAI,yBAAyB,MAAMU,EAAEZ,EAAEC,OAAOC,IAAI,qBAAqB,MAAMW,EAAEb,EAAEC,OAAOC,IAAI,kBAAkB,MAAMY,EAAEd,EACpfC,OAAOC,IAAI,uBAAuB,MAAMa,EAAEf,EAAEC,OAAOC,IAAI,cAAc,MAAMc,EAAEhB,EAAEC,OAAOC,IAAI,cAAc,MAAMe,EAAEjB,EAAEC,OAAOC,IAAI,eAAe,MAAMgB,EAAElB,EAAEC,OAAOC,IAAI,qBAAqB,MAAMiB,EAAEnB,EAAEC,OAAOC,IAAI,mBAAmB,MAAMkB,EAAEpB,EAAEC,OAAOC,IAAI,eAAe,MAClQ,SAASmB,EAAEC,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKpB,EAAE,OAAOmB,EAAEA,EAAEG,MAAQ,KAAKf,EAAE,KAAKC,EAAE,KAAKN,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKO,EAAE,OAAOS,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAKf,EAAE,KAAKG,EAAE,KAAKI,EAAE,KAAKD,EAAE,KAAKP,EAAE,OAAOc,EAAE,QAAQ,OAAOC,GAAG,KAAKnB,EAAE,OAAOmB,IAAI,SAASG,EAAEJ,GAAG,OAAOD,EAAEC,KAAKX,EAAE,I,aAAkBD,E,eAAyBC,E,gBAA0BF,E,gBAA0BD,E,QAAkBL,E,WAAqBS,E,SAAmBP,E,KAAeW,E,KAAeD,E,OAAiBX,E,SAC/dG,E,WAAqBD,E,SAAmBO,E,YAAsB,SAASS,GAAG,OAAOI,EAAEJ,IAAID,EAAEC,KAAKZ,G,iBAA4BgB,E,kBAA4B,SAASJ,GAAG,OAAOD,EAAEC,KAAKb,G,kBAA6B,SAASa,GAAG,OAAOD,EAAEC,KAAKd,G,UAAqB,SAASc,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWrB,G,aAAwB,SAASmB,GAAG,OAAOD,EAAEC,KAAKV,G,WAAsB,SAASU,GAAG,OAAOD,EAAEC,KAAKjB,G,OAAkB,SAASiB,GAAG,OAAOD,EAAEC,KAAKN,G,OAC1c,SAASM,GAAG,OAAOD,EAAEC,KAAKP,G,SAAoB,SAASO,GAAG,OAAOD,EAAEC,KAAKlB,G,WAAsB,SAASkB,GAAG,OAAOD,EAAEC,KAAKf,G,aAAwB,SAASe,GAAG,OAAOD,EAAEC,KAAKhB,G,WAAsB,SAASgB,GAAG,OAAOD,EAAEC,KAAKT,G,mBAC9M,SAASS,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAIjB,GAAGiB,IAAIX,GAAGW,IAAIf,GAAGe,IAAIhB,GAAGgB,IAAIT,GAAGS,IAAIR,GAAG,kBAAkBQ,GAAG,OAAOA,IAAIA,EAAEE,WAAWR,GAAGM,EAAEE,WAAWT,GAAGO,EAAEE,WAAWhB,GAAGc,EAAEE,WAAWf,GAAGa,EAAEE,WAAWZ,GAAGU,EAAEE,WAAWN,GAAGI,EAAEE,WAAWL,GAAGG,EAAEE,WAAWJ,GAAGE,EAAEE,WAAWP,I,OAAmBI,GCN/TM,G,iBCKA,K,eCVFlC,EAAA,QAAiBmC,KFKSC,OAAOF,uBAC/B,EAAiBE,OAAOC,UAAUC,eAClCC,EAAmBH,OAAOC,UAAUG,qBAExC,SAASC,EAASC,GACjB,GAAY,OAARA,QAAwBC,IAARD,EACnB,MAAM,IAAIE,UAAU,yDAGrB,OAAOR,OAAOM,IAGf,WACC,IACC,IAAKN,OAAOS,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCV,OAAOY,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,EAAQ,GACHhD,EAAI,EAAGA,EAAI,GAAIA,IACvBgD,EAAM,IAAMF,OAAOG,aAAajD,IAAMA,EAKvC,GAAwB,eAHXmC,OAAOY,oBAAoBC,GAAOE,KAAI,SAAUhC,GAC5D,OAAO8B,EAAM9B,MAEHiC,KAAK,IACf,OAAO,EAIR,IAAIC,EAAQ,GAIZ,MAHA,uBAAuBC,MAAM,IAAIC,SAAQ,SAAUC,GAClDH,EAAMG,GAAUA,KAGf,yBADEpB,OAAOqB,KAAKrB,OAAOS,OAAO,GAAIQ,IAAQD,KAAK,IAM9C,MAAOM,GAER,OAAO,IAIQC,IAAoBvB,OAAOS,OAA5C,IGrDA,EAF2B,+CCgC3B,SAASe,EAAeC,EAAWC,EAAQC,EAAUC,EAAeC,IAsDpEL,EAAeM,kBAAoB,WAC7B,GCjFIC,SAASC,KAAKC,KAAKjC,OAAOC,UAAUC,gBCJ9C,SAASgC,KACT,SAASC,KACTA,EAAuBL,kBAAoBI,EAE3C,I,iBCEEtE,EAAA,QDFe,WACf,SAASwE,EAAKC,EAAOC,EAAUV,EAAeD,EAAUY,EAAcC,GACpE,GAAIA,IAAWC,EAAf,CAIA,IAAInB,EAAM,IAAIoB,MACZ,mLAKF,MADApB,EAAIqB,KAAO,sBACLrB,GAGR,SAASsB,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,KAAMZ,EACNa,KAAMb,EACNc,OAAQd,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASX,EACTY,QAASpB,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPpB,eAAgBW,EAChBL,kBAAmBI,GAKrB,OAFAY,EAAemB,UAAYnB,EAEpBA,EC7CUoB,M,22BCTJ,SAASC,EAAa9B,GAAO,MACO+B,mBAA/C,IADwC,mBAClC,EADkC,KAClC,EADkC,KAExCC,qBAAU,WACNC,EAAoBjC,EAApBiC,qBACD,CAACjC,EAFJgC,oBAOA,IAYME,EAAkBC,EAAA,KAAqBC,YACzC,IAAIC,EAAJ,GAIA,OAHA,IAAID,cACAC,iBAGA,yBAAKC,UAAL,gBAA+BC,IAAKH,GAChC,yBAAKE,UAAU,uBACX,yBAAKA,UAAU,iBACXE,8BAAOJ,EADX,MAEII,8BAFJ,aAGIA,8BAAOJ,EAJf,OAMI,yBAAKE,UAAU,mBACX,kBAACG,EAAA,EAAD,OACIlF,KADJ,SAEImF,MAFJ,GAGIJ,UAAWF,cAAiBA,EAHhC,MAIIO,GAAIP,cAAiBA,EAJzB,MAKIQ,QAASR,EALb,QAMIS,cANJ,kCAOIC,SAAU,WACN9C,kCAGR,yBACI+C,KADJ,eAEIF,cAFJ,kCAGIG,QAAS,YAxCZZ,YACjBpC,+BAwCwBiD,MAGJT,oBA1BhB,SA8BI,yBAAKF,UAAU,2BACX,iCACIK,GAAIP,cAAiBA,EADzB,MAEIc,SAAUd,EAFd,QAGI3G,QAAS2G,EAHb,YAIIe,UAJJ,QAKIC,aALJ,MAMId,UANJ,eAOIe,eAAgBjB,EAPpB,MAQIkB,SAAWnH,aAhDd,SAACoH,EAAcC,EAAcpB,GAC1CpC,+BAgDoBsD,CAASnH,EAAGA,EAAEA,SAAN,GAARmH,OAIZ,0BAAMX,GAAN,eAAwBL,UAAWD,GAC9BD,EA9Cb,aAmDJ,OAAOI,6BAAP,GC9EW,SAASiB,EAAezD,GAAO,MACQ+B,mBAAlD,IAD0C,mBACpC,EADoC,KACpC,EADoC,KAE1CC,qBAAU,WACN0B,EAAqB1D,EAArB0D,kBACD,CAAC1D,EAFJgC,iBAOA,IAGM2B,EAAoBC,EAAA,KAAuBxB,YAC7C,IAAIC,EAAJ,GAIA,OAHA,IAAID,cACAC,iBAGA,yBAAKC,UAAL,gBAA+BC,IAAKH,GAChC,yBAAKE,UAAL,sBAAqCC,IAAK,GACtC,yBAAKD,UAAU,iBACXE,kBAACC,EAAA,EAADD,WACIA,gCAASJ,EAHrB,QAMI,yBAAKE,UAAU,mBACX,kBAACG,EAAA,EAAD,OACIlF,KADJ,SAEIoF,GAAIP,EAFR,KAGIM,MAHJ,GAIImB,eAAgBzB,EAJpB,QAKIS,cALJ,8BAMIC,SAAU,WACN9C,8BAGR,yBACI+C,KADJ,eAEIF,cAFJ,8BAGIG,QAAS,YA9BZZ,YACjBpC,2BA8BwBiD,MAGJT,oBAzBhB,SA6BKJ,EAAA,WAAgB0B,YACb,OACI,yBAAKvB,IAAG,UAAKuB,EAAL,YAAcA,EAAMxD,OACxB,yBACIgC,UADJ,cAEIC,IAAG,UAAKuB,EAAL,YAAcA,EAAMxD,OAEvBkC,kBAACC,EAAA,EAADD,UAAYsB,EALpB,SAOI,yBAAKxB,UAAL,gBAA+BC,IAAKuB,GAChC,yBAAKxB,UAAU,aACX,kBAACG,EAAA,EAAD,SACIsB,UAAW3B,EADf,QAEI7E,KAFJ,iBAGIyG,MAAOF,EAHX,MAIIxB,UAAWwB,EAJf,KAKIjB,cALJ,4BAMIC,SAAW3G,YACP6D,wBAEI8D,EAFJ9D,OAGI7D,SAHJ6D,gBAe5B,0BAAM2C,GAAN,eAAwBL,UAAWD,GAC9BD,EAhEb,aAqEJ,OAAOI,6BAAP,GCtFW,SAASyB,EAAejE,GAAO,MACM+B,mBAAhD,IAD0C,mBACpC,EADoC,KACpC,EADoC,KAE1CC,qBAAU,WACNkC,EAAoBlE,EAApBkE,uBACD,CAAClE,EAFJgC,sBAIA,IAAMmC,EAAmBC,EAAA,KAAsBhC,YAC3C,IAAIC,EAAJ,GAIA,OAHA,IAAID,cACAC,iBAGA,yBAAKE,IAAKH,GACN,yBAAKE,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBACXE,8BAAOJ,EAFf,OAII,yBAAKE,UAAU,mBACX,kBAACG,EAAA,EAAD,OACIlF,KADJ,SAEImF,MAFJ,GAGIC,GAAIP,EAHR,KAIIQ,QAASR,EAJb,QAKIS,cALJ,mCAMIC,SAAU,WACN9C,mCAGR,yBACI+C,KADJ,eAEIF,cAFJ,oCAGIG,QAAS,WACLhD,kCAGJwC,oBAvBhB,SA2BI,yBAAKF,UAAU,eACX,2BACIK,GAAIP,cAAiBA,EADzB,UAEI2B,UAAW3B,EAFf,QAGI7E,KAHJ,OAII8G,aAAcjC,EAJlB,MAKIE,UALJ,eAMIO,cANJ,kCAOIC,SAAW3G,YACP6D,8BAEI7D,SAFJ6D,WAOZ,0BAAM2C,GAAN,eAAwBL,UAAWD,GAC9BD,EA9CjB,cAqDJ,OAAOI,6BAAP,G,+MFiBJV,YAAyB,CACrBwC,kBAAmB1C,EADE,IAErB2C,0BAA2B3C,EAFN,IAGrB4C,wBAAyB5C,EAHJ,IAIrB6C,0BAA2B7C,EAAUX,KCIzCwC,YAA2B,CACvBiB,eAAgB9C,EADO,IAEvB+C,sBAAuB/C,EAFA,IAGvBgD,sBAAuBhD,EAHA,IAIvBiD,oBAAqBjD,EAAUX,KC1BnCgD,YAA2B,CACvBa,oBAAqBlD,EADE,IAEvBmD,2BAA4BnD,EAFL,IAGvBoD,2BAA4BpD,EAHL,IAIvBqD,0BAA2BrD,EAAUX,K,29BCpEzC,IAAMiE,GAAelF,YAAU,MACe+B,mBAA1C,QAD2B,mBACrB,EADqB,KACrB,EADqB,OAEiBA,mBAA5C,IAF2B,mBAErB,EAFqB,KAErB,EAFqB,OAGuBA,mBAAlD,IAH2B,mBAGrB,EAHqB,KAGrB,EAHqB,OAIaA,mBAAxC,IAJ2B,mBAIrB,EAJqB,KAIrB,EAJqB,OAKyBA,mBAApD,IAL2B,mBAKrB,EALqB,KAKrB,EALqB,OASvBA,mBAHJ,IAN2B,mBAMrB,EANqB,KAMrB,EANqB,OAUqBA,mBAAhD,QAV2B,mBAUrB,EAVqB,KAUrB,EAVqB,OAWSA,mBAApC,IAX2B,mBAWrB,EAXqB,KAWrB,EAXqB,KAY3BC,qBAAU,WACNmD,EAAsBnF,EAAtBmF,oBACAC,EAAgCpF,EAAhCoF,wBACD,CAACpF,EAAD,mBAA2BA,EAH9BgC,uBAIAA,qBAAU,WACNqD,EAAgBrF,EAAhBqF,sBACAC,EAAqBtF,EAArBsF,kBACAC,EAAiBvF,EAAjBuF,iBACD,CACCvF,EADD,qBAECA,EAFD,iBAGCA,EAPJgC,gBASAA,qBAAU,WACNwD,EAAoBxF,EAApBwF,kBACAC,EAAczF,EAAdyF,cACD,CAACzF,EAAD,iBAAyBA,EAH5BgC,aAQA,IAYI0D,EAAeC,qBAAnB,iBACAD,EAAeA,EAAeE,WAAH,GAA3BF,IACIA,OAAJ,IACIA,EAAeA,QACXA,SADWA,EAEXA,EAFJA,SAKJ,IAAMG,EAASH,EAAA,KAAkBI,YAC7B,OACI,yBACI/C,KADJ,eAEIT,UAFJ,gBAGIO,cAHJ,oBAIIN,IAJJ,EAKIS,QAAS,WACLhD,uBAGHrC,eAVT,OAcJ,OACI,6BACI,yBACIoI,MAAO,CAAEC,QAASC,GAClB3D,UAAU,mBAEVE,6BAJJ,kBADJ,GASI,yBAAKuD,MAAO,CAAEC,QAASE,IACnB,yBAAK5D,UAAU,iBAAf,mBAEI,0BAAMA,UAAU,gBAAgBtC,EAHxC,cAKI,yBAAKsC,UAAU,mBACX,qBACIhC,KAAMN,EADV,KAEIzC,KAAMyC,EAFV,KAGImG,QAASnG,EAHb,QAIIoG,SAAUpG,EAJd,SAKIvE,QAASuE,EALb,QAMIsE,kBAAmBtE,EANvB,kBAOIuE,0BACIvE,EARR,0BAUIyE,0BACIzE,EAXR,0BAaIwE,wBAAyBxE,EAAMwE,0BAEnC,qBACIE,eAAgB1E,EADpB,eAEI2E,sBAAuB3E,EAF3B,sBAGI4E,sBAAuB5E,EAH3B,sBAII6E,oBAAqB7E,EAJzB,oBAKIqG,SAAUrG,EALd,SAMIsG,YAAatG,EANjB,YAOIuG,aAAcvG,EAPlB,aAQIwG,eAAgBxG,EARpB,eASIyG,aAAczG,EATlB,aAUI0G,YAAa1G,EAVjB,YAWI2G,cAAe3G,EAXnB,cAYI4G,cAAe5G,EAZnB,cAaI6G,cAAe7G,EAAM6G,gBAEzB,qBACI/B,oBAAqB9E,EADzB,oBAEIgF,2BACIhF,EAHR,2BAKIiF,0BACIjF,EANR,0BAQI+E,2BACI/E,EAAM+E,8BAIlB,yBAAKzC,UAAU,eACX,yBAAKA,UAAU,gBACX,uBACIA,UADJ,cAEIwE,QAFJ,GAGI9D,QAAShD,EAAM+G,mBAEfvE,qBALJ,MAMIA,8BARZ,UAWI,yBAAKF,UAAU,YACX,0BAAMA,UAAW0E,GADrB,GAII,uBACIF,QADJ,GAEIxE,UAFJ,QAGIU,QAAShD,EAAMiH,aAPvB,SAWI,uBACIH,QADJ,GAEIxE,UAFJ,cAGIO,cAHJ,qBAIIG,QAAS,WACLhD,gBACAA,gCACAA,4BACAA,mCA9BhB,iBAoCI,yBACI+F,MAAO,CAAEC,QAASkB,GAClB5E,UAAU,eAEVE,4BAJJ,mBAKI,0BAAMF,UAAW6E,GALrB,GAQI,2BAAOC,QAAQ,kBAAf,mBAEI,2BACIzE,GADJ,iBAEIL,UAFJ,MAGI0B,MAHJ,EAIInB,cAJJ,+BAKIC,SAAW3G,YAAD,OAjJNA,YAC5BkL,EAAkBlL,SAAlBkL,OAgJyCC,CAAuBnL,OAGhD,yBAAKmG,UAAU,YACX,4BACI/E,KADJ,SAEI+E,UAFJ,SAGIO,cAHJ,yBAIIG,QAAS,WAjJjCuC,UACAD,MACAD,QA0IgB,UAWI,4BACI9H,KADJ,SAEI+E,UAFJ,SAGIO,cAHJ,oBAIIG,QAAS,WACLhD,kBAjIhC,c,iNA+IJkF,aAAwB,CACpBqC,mBAAoB3F,EADA,IAEpB4F,qBAAsB5F,EAFF,IAGpB6F,qBAAsB7F,EAHF,IAIpB8F,iBAAkB9F,EAJE,IAKpB+F,cAAe/F,EALK,IAMpBqE,iBAAkBrE,EANE,IAOpBsE,WAAYtE,EAPQ,IAQpBgG,gBAAiBhG,EARG,IASpBiG,YAAajG,EATO,IAUpBtB,KAAMsB,EAVc,IAWpBrE,KAAMqE,EAXc,IAYpBuE,QAASvE,EAZW,IAapBwE,SAAUxE,EAbU,IAcpBnG,QAASmG,EAdW,IAepB0C,kBAAmB1C,EAfC,IAgBpB2C,0BAA2B3C,EAhBP,IAiBpB6C,0BAA2B7C,EAjBP,IAkBpB4C,wBAAyB5C,EAlBL,IAmBpB8C,eAAgB9C,EAnBI,IAoBpB+C,sBAAuB/C,EApBH,IAqBpBgD,sBAAuBhD,EArBH,IAsBpBiD,oBAAqBjD,EAtBD,IAuBpByE,SAAUzE,EAvBU,IAwBpB0E,YAAa1E,EAxBO,IAyBpB2E,aAAc3E,EAzBM,IA0BpB4E,eAAgB5E,EA1BI,IA2BpB6E,aAAc7E,EA3BM,IA4BpB8E,YAAa9E,EA5BO,IA6BpBgF,cAAehF,EA7BK,IA8BpBiF,cAAejF,EA9BK,IA+BpBkD,oBAAqBlD,EA/BD,IAgCpBoD,2BAA4BpD,EAhCR,IAiCpBqD,0BAA2BrD,EAjCP,IAkCpBmD,2BAA4BnD,EAlCR,IAmCpBmF,kBAAmBnF,EAnCC,IAoCpBqF,YAAarF,EApCO,IAqCpBkG,YAAalG,EArCO,IAsCpBmG,WAAYnG,EAtCQ,IAuCpB+E,cAAe/E,EAAUX,K,kXC5Pd,SAAS+G,GAAWhI,GAAO,MACE+B,mBAAxC,IADsC,mBAChC,EADgC,KAChC,EADgC,OAEEA,mBAAxC,IAFsC,mBAEhC,EAFgC,KAEhC,EAFgC,OAGAA,mBAAtC,IAHsC,mBAGhC,EAHgC,KAGhC,EAHgC,OAIIA,mBAA1C,QAJsC,mBAIhC,EAJgC,KAIhC,EAJgC,KAMtCC,qBAAU,WAENiG,EAAgBjI,aAAhBiI,QACAC,EAAgBlI,aAAhBkI,QACAlI,6BAAiCoC,YACzBA,EAAJ,OACIA,iBAAoB7E,qBAK7B,CAACyC,aAXJgC,SAgBA,IAyBMmG,EAAiBC,EAAA,KAAkBhG,YACrC,OAAIA,QAAJ,OAEQ,yBAAKG,IAAKH,GACN,2BACI,2BACI,kBAACiG,EAAA,EAAD,QACIxF,cADJ,uBAEIG,QAAS,WAjB7BsF,QAAJ,SAA0BC,GACtBC,UACAC,QAEAD,MACAC,YAeoB1C,MAAO,CAAE2C,WAAYtG,EAAKuG,QAC1BC,GAAIC,IANR,OAOIC,SAAS,KAER1G,EATL,KAUI,yBACIE,UADJ,gBAEIyD,MAAO,CAAEC,QAASsC,IAElB9F,qBAdR,OAgBI,yBACIF,UADJ,iBAEIyD,MAAO,CAAEC,QAASuC,IAElB/F,qBArBZ,QAwBI,kBAAC6F,EAAA,EAAD,UAAoBS,SAAS,KACzB,kBAACD,EAAA,EAAD,UACI,wBAAIvG,UAAJ,iBAA+BC,IAAKH,GAC/BA,SACGA,EAAA,WAAgB7E,YACZ,OACI,wBACIwF,KADJ,eAEIgD,MAAO,CACH2C,WACInL,EAAKoL,QAEb9F,cANJ,iBAOIG,QAAS,WACLhD,kBACIoC,EADJpC,KAEIzC,EAFJyC,SAGIzC,EAHJyC,QAIIzC,EAJJyC,KAKIoC,EALJpC,MAMIoC,EANJpC,UAOIzC,EAPJyC,WAQIzC,EARJyC,kBASIzC,EATJyC,UAaJuC,IAAKhF,GAEJA,EAxBT,eAoCjC,yBAAKgF,IAAKH,OAEf2G,EAAaX,EAAA,KAAkBhG,YACjC,OAAIA,QAAJ,OAEQ,yBAAKE,UAAL,aAA4BC,IAAKH,GAC7B,wBACIW,KADJ,eAEIgD,MAAO,CAAE2C,WAAYtG,EAAKuG,QAC1B9F,cAHJ,aAIIG,QAAS,WACLhD,kBACIoC,EADJpC,KAEIoC,EAFJpC,SAGIoC,EAHJpC,QAIIoC,EAJJpC,MAKIoC,EALJpC,MAMIoC,EANJpC,UAOIoC,EAPJpC,WAQIoC,EARJpC,kBASIoC,EATJpC,WAcHoC,EArBb,OA0BG,yBAAKG,IAAKH,OA+Bf4G,EAAcZ,EAAA,KAAkBhG,YAClC,OACMA,oBAAyBA,QAAzBA,QAA8CA,QADpD,OA6BO,yBAAKG,IAAKH,IAzBT,yBAAKE,UAAL,cAA6BC,IAAKH,GAC9B,wBACIW,KADJ,eAEIgD,MAAO,CAAE2C,WAAYtG,EAAKuG,QAC1B9F,cAHJ,cAIIG,QAAS,WACLhD,kBACIoC,EADJpC,KAEIoC,EAFJpC,SAGIoC,EAHJpC,QAIIoC,EAJJpC,MAKIoC,EALJpC,MAMIoC,EANJpC,UAOIoC,EAPJpC,WAQIoC,EARJpC,kBASIoC,EATJpC,WAcHoC,EArBb,UA4BR,OACI,6BACI,kBAACK,EAAA,EAAD,SACI,kBAACA,EAAA,EAAD,SACIwG,UADJ,EAEI1L,KAFJ,OAGI2L,YAHJ,kBAII7E,aAJJ,GAKI/B,UALJ,gBAMIO,cANJ,4BAOIC,SAtMa3G,YACzB,IAAIgN,EAAJ,GAEMC,EAAYjN,SAAlB,MACA,IACIgN,EAAeE,EAAA,QAAqBjH,YAChC,OACIA,QACAA,8BAAiCgH,EAFrC,mBAMRnB,SA6LI,yBAAK3F,UAAU,cACXE,6BADJ,GAEIA,6BAFJ,GAGIA,6BAhBZ,K,iNAsBJwF,aAAuB,CACnBsB,WAAY1H,EADO,IAEnB2H,gBAAiB3H,EAAUX,K,g7CC9O/B,ICGA,GACA,GDJMuI,GAAgBxJ,YAAU,MACQ+B,oBAApC,GAD4B,mBACtB,EADsB,KACtB,EADsB,KAEtB0H,EAAUC,mBAChB1H,qBAAU,WACN,IAAM2H,EAAeC,YACbH,YAAoBA,mBAAyBG,EAAjD,UACIC,MACA7J,uBAMR,OAHA6J,EAAc7J,EAAd6J,YACAC,yCAEO,WACHA,+CAEL,CAbH9H,IAeA,IACI0D,EAAeC,qBAAnB,gBAGMoE,GAFNrE,EAAeA,EAAeE,WAAH,GAA3BF,IAEoB,KAAkBI,YAClC,OACI,yBAAKvD,IAAKuD,GACN,yBAAKxD,UAAU,aACXE,6BACIA,qBAFR,OAII,yBACIO,KADJ,eAEIgD,MAAO,CAAEiE,WAAY,QACrBnH,cAHJ,wBAIIG,QAAS,WAEL6G,MACA7J,qBACAA,uBAGHrC,eAjBjB,SAuBJ,SAEQ,yBAAK2E,UAAL,gBAA+B2H,IAAKR,GAChC,yBAAKnH,UAAU,gBACX,yBAAKA,UAAU,cADnB,iBAEI,wBAAIC,IAjCpB,GAiCmCD,UAAU,aAJzC,KAWGE,wBAAP,OAGJgH,aAAyB,CACrBU,iBAAkBtI,EADG,IAErBuI,WAAYvI,EAFS,IAGrBgG,gBAAiBhG,EAAUX,KC3D/B,IAAMmJ,GAAmBpK,YAAU,MACK+B,oBAApC,GAD+B,mBACzB,EADyB,KACzB,EADyB,OAEGA,mBAAlC,IAF+B,mBAEzB,EAFyB,KAEzB,EAFyB,OAGGA,mBAAlC,QAH+B,mBAGzB,EAHyB,KAGzB,EAHyB,KAI/BC,qBAAU,WACNqI,EAAarK,kBAAbqK,aAEIrK,+BACAA,qCAFJ,EAIIsK,MAEAA,YAEL,CAACtK,EAVJgC,kBAWA,IAAMkI,EAAmB,WACrBK,OAuEJ,OArEA,GACIC,GAAYC,EAAZD,OACAE,GAAQD,EAAA,KAAerI,YACnB,OAAIA,EAAJ,KAEQ,yBACIW,KADJ,eAEIT,UAFJ,cAGIC,IAHJ,EAIIS,QAAS,WACLhD,yBAGJwC,8BACKJ,EADLI,SACiBJ,EATrB,MAWKA,EAAA,WAAgB4B,YACb,OAAO,yBAAKzB,IAAKyB,GAAQA,EAAzB,WAKZ5B,EAAJ,UAEQ,yBACIW,KADJ,eAEIT,UAFJ,cAGIC,IAHJ,EAIIS,QAAS,WACLhD,yBAGJwC,8BAAOJ,EARX,UAQ8BA,EAR9B,UASKA,EAVT,QAcAA,EAAJ,WAEQ,yBACIW,KADJ,eAEIT,UAFJ,cAGIC,IAHJ,EAIIS,QAAS,WACLhD,yBAGJwC,8BAAOJ,EARX,YASKA,EAVT,OAeA,yBACIW,KADJ,eAEIT,UAFJ,cAGIC,IAHJ,EAIIS,QAAS,WACLhD,yBAGJwC,8BAAOJ,EARX,UAQ8BA,EATlC,WAcJsI,GAAQlI,wBAARkI,MAIA,yBAAKpI,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBACIS,KADJ,eAEIT,UAFJ,WAGIU,QAASkH,GAET1H,qBANR,OAQI,sBACImI,oBAAqB3K,EADzB,oBAEImK,WAFJ,EAGID,iBAHJ,EAIItC,gBAAiB5H,EAJrB,gBAKI4K,kBAAmB5K,EAAM4K,oBAE7B,yBAAKtI,UAAU,aAjB3B,iBAoBI,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,0BACIyD,MAAO,CAAEC,QAAS6E,GAClBvI,UAAU,eAFd,SADJ,OAQI,yBACIS,KADJ,eAEIC,QAAS,WACLhD,gBAEJsC,UAAU,aAnC9B,oBChDW,SAASwI,GAAO9K,GAAO,MAC4B+B,mBAA9D,IADkC,mBAC5B,EAD4B,KAC5B,EAD4B,OAEkBA,mBAApD,IAFkC,mBAE5B,EAF4B,KAE5B,EAF4B,OAGUA,mBAA5C,IAHkC,mBAG5B,EAH4B,KAG5B,EAH4B,OAIoBA,mBAAtD,IAJkC,mBAI5B,EAJ4B,KAI5B,EAJ4B,OAKoBA,mBAAtD,IALkC,mBAK5B,EAL4B,KAK5B,EAL4B,OAM8BA,mBAAhE,IANkC,mBAM5B,EAN4B,KAM5B,EAN4B,OASYA,mBAA9C,IATkC,mBAS5B,EAT4B,KAS5B,EAT4B,OAUIA,mBAAtC,GAVkC,mBAU5B,EAV4B,KAU5B,EAV4B,OAWEA,mBAApC,IAXkC,mBAW5B,EAX4B,KAW5B,EAX4B,OAYQA,mBAA1C,QAZkC,mBAY5B,EAZ4B,KAY5B,EAZ4B,OAacA,mBAAhD,IAbkC,mBAa5B,EAb4B,KAa5B,EAb4B,OAcsBA,mBAAxD,IAdkC,mBAc5B,EAd4B,KAc5B,EAd4B,QAekBA,mBAApD,IAfkC,qBAe5B,GAf4B,MAe5B,GAf4B,SAgBsBA,mBAAxD,IAhBkC,qBAgB5B,GAhB4B,MAgB5B,GAhB4B,SAiBcA,mBAAhD,QAjBkC,qBAiB5B,GAjB4B,MAiB5B,GAjB4B,SAkBEA,mBAApC,IAlBkC,qBAkB5B,GAlB4B,MAkB5B,GAlB4B,MAoBlCC,qBAAU,WACN+I,EAAc/K,EAAd+K,cACD,CAAC/K,EAFJgC,aAGAA,qBAAU,WACN,IAAIgJ,EACJA,EACIC,SACAvG,EADAuG,OAEAnG,EAHJkG,OAIAE,OACD,CAACD,EAAoBvG,EAPxB1C,IAWA,IAOMmJ,GAAc,WAEhBC,QAqEE7G,GAA6BnC,YAC/BkH,kBAA2B+B,YACvBA,iBAAkBC,YACVA,SAAalJ,EAAbkJ,MAA0BlJ,SAAciJ,EAA5C,OACIC,oBAIZ,IAAIhH,EAAoB,YAAxB,GACMiH,EAAQjH,aACTrH,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,SAAWmF,EAD9C,SAGA,IAAImJ,EACAjH,cAEAA,KAEJkH,KACAlH,WAA2BmH,YACvBnC,kBAA2BoC,YACnBA,SAAaA,SAAaD,EAA1BC,MAAJ,MAA0CA,WACtCA,qBAWV/G,GAAyBvC,YAC3BkH,kBAA2B+B,YACnBA,SAAYjJ,EAAhB,OACIiJ,iBAGR/B,kBAA2B+B,YACnBA,SAAYjJ,EAAhB,OACIA,iBAGR,IAAMuJ,EAAgB,YAAtB,GACMJ,EAAQI,aAAyB1O,YAAD,OAAOA,SAAWmF,EAAxD,QACAuJ,cAEAA,WAAuBvJ,YACnBA,iBAAoBwJ,YAChBA,iBAGRC,KACAvC,kBAA2BwC,YACnBA,SAAiB1J,EAArB,MACIA,iBAAoBwJ,YAChBA,iBAIRxJ,IAAJ,IACI2J,OAQF/G,GAA8B5C,YAChCkH,kBAA2B+B,YAEvB,IAAMW,EAAN,EACIA,SAAoB5J,EAAxB,OACI4J,iBAGR,IAAIC,EAAqB,YAAzB,GACMV,EAAQU,aACThP,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,aAAemF,EADlD,aAGA,IAAImJ,EACAU,cAEAA,KAEJC,MAMEjF,GAAc,WAChB1C,OACAI,OACAK,OACAmH,MACA3G,OACAC,YAghBE2G,GAAkBC,YACpB,IAAMC,EAAO,IAAIC,KAAjB,GADkC,EAEX,IAAIC,KAAJ,uBAAiC,CACpDC,KADoD,UAEpDC,MAFoD,UAGpDC,IAHoD,UAIpDC,KAJoD,UAKpDC,OALoD,UAMpDC,QAAS,YAYTC,cAVJ,GAVkC,mBAWrBL,EAXqB,KAW5B1I,MAEO2I,EAbqB,KAa5B3I,MAEOyI,EAfqB,KAe5BzI,MAEO4I,EAjBqB,KAiB5B5I,MAEO6I,EAnBqB,KAmB5B7I,MAEN,gBAAUyI,EAAV,YAAkBC,EAAlB,YAA2BC,EAAM,KAAjC,OAAuCC,EAAvC,gBA4jBEhF,GAAmBxF,YACrBqD,OACAD,WACA,IAAIwH,EAAJ,GACIC,EAAJ,GACMC,EAAN,GACMxH,EAAN,GACA/H,wBAA2B4E,YACvBH,cAAmB+K,YACfxP,wBAA6B4E,YACzB2K,OAAaC,EAAbD,aAIZ,IAAIE,EAAJ,GACAF,WAAiBC,YACbA,WAAgBzM,YACZgF,gBAGRA,WAAsB2H,YAWlB,GAVA/D,kBAA2BgE,YACvB,GAAIA,QAAJ,OAAsB,CAClB,IAAM/B,EAAQ+B,mBACTrQ,YAAD,OAAOA,SAAWoQ,EAAXpQ,MAAyBqQ,SAAaD,EADjD,SAGA,IAAI9B,IACA6B,EAAME,WAANF,aAIZ,iBAAIC,WAAmC,CACnC,IAAM/I,EAAoB,YAA1B,GACA,GAAIA,SAAJ,GAII,IAHcA,aACTrH,YAAD,OAAOA,SAAWoQ,EAAXpQ,MAAyBoQ,SAAepQ,EADnD,SAIIqH,OAAuB,CACnBhE,KAAM+M,EADa,KAEnBjH,SAAUiH,EAFS,SAGnB9P,KAAM8P,EAHa,KAInBlH,QAASkH,EAJU,QAKnBrJ,MAAOqJ,EALY,MAMnBE,YAAaH,SAIrB9I,OAAuB,CACnBhE,KAAM+M,EADa,KAEnBjH,SAAUiH,EAFS,SAGnB9P,KAAM8P,EAHa,KAInBlH,QAASkH,EAJU,QAKnBrJ,MAAOqJ,EALY,MAMnBE,YAAaH,IAGrBJ,QAGRxB,KACA,IAAMgC,EAAN,GACA9H,WAAsB2H,YAClB,aAAIA,YACA,IAAIG,UACAA,OAA2B,CACvBlN,KAAM+M,EADiB,KAEvBjH,SAAUiH,EAFa,SAGvBlH,QAASkH,EAHc,QAIvBvJ,MAAO,QAKvB4B,WAAsB+H,YAClB,aAAIA,YACID,SAAJ,GACIA,WAA+BE,YAC3BA,aAAkB,CACdC,OAAQF,EADM,WAEdzJ,MAAOyJ,EAAMzJ,cAMjC6H,KACAnG,WAAsB2H,YAClB,YAAIA,WAA2B,CAC3B,IAAMpB,EAAqB,YAA3B,GACA,GAAIA,SAAJ,GAII,IAHcA,aACThP,YAAD,OAAOA,SAAWoQ,EADtB,SAIIpB,OAAwB,CACpB3L,KAAM+M,EADc,KAEpBjH,SAAUiH,EAFU,SAGpBlH,QAASkH,EAHW,QAIpBrJ,MAAOqJ,EAAMrJ,aAIrBiI,OAAwB,CACpB3L,KAAM+M,EADc,KAEpBjH,SAAUiH,EAFU,SAGpBlH,QAASkH,EAHW,QAIpBrJ,MAAOqJ,EAAMrJ,QAGrBiJ,QAGRf,KAEAd,QAt6C8B,GAnCtC,WAA+B,MACerJ,oBAA1C,GAD2B,mBACrB,EADqB,KACrB,EADqB,KAGrBkI,EAAMP,iBAAZ,MAMMkE,EAAsBhE,YACxB,WAAIA,OACAwB,OAOFyC,EAAsBjE,YACpBK,YAAgBA,mBAAqBL,EAAzC,SACIwB,OAaR,OATApJ,qBAAU,WAGN,OAFA8H,0CACAA,wCACO,WACHA,6CACAA,+CAID,yBAAwBsB,kBA26CkB0C,GAA3C,GAz6C4B,GAy6C5B,OAz6C4B,GAy6C5B,gBAAwB1C,GAz6CI,GAy6CJA,eAC9B,OACI,yBAAKnB,IAAKA,IACL8D,IACG,yBAAKzL,UAAL,0BAAyC2H,IAAKA,IAC1C,yBAAK3H,UAAU,gBACX,yBAAKA,UAAU,gBACX,sBACIgH,WADJ,EAEIC,gBA9iCJ,SAAC,EAAD,iBAgBpB,GALAyE,UACAC,MACAC,MACAC,OACAC,OACA,iBAAIhI,EAA6B,CAC7B,IAAMpC,EAAQ,oCAKVuJ,YAAa,IAEjBjE,kBAA2BlH,YACnBA,SAAc4B,EAAlB,OACI5B,aACAA,iBAAoBkJ,YACZA,SAAatH,EAAjB,OACIsH,qBAKhB,IAAMhH,EAAoB,YAA1B,GACA,GAAIA,SAAJ,GAII,IAHcA,aACTrH,YAAD,OAAOA,SAAW+G,EAAX/G,MAAyBA,SAAW+G,EAD/C,SAIIM,OAAuB,oCAKnBiJ,YALmB,EAMnBc,WANmB,EAOnBC,iBAIRhK,OAAuB,oCAKnBiJ,YALmB,EAMnBc,WANmB,EAOnBC,YAGR9C,KAEJ,gBAAIpF,EAAyB,CACzB,IAAMpC,EAAQ,qCAKVqK,WALU,EAMVC,WAEJhF,kBAA2BlH,YACnBA,SAAc4B,EAAlB,OACI5B,iBAGR,IAAMuJ,EAAgB,YAAtB,GACA,GAAIA,SAAJ,GAII,IAHcA,aACT1O,YAAD,OAAOA,SAAW+G,EAAX/G,MAAyBA,UAAY+G,EADhD,UAII2H,OAAmB,qCAKf0C,WALe,EAMfC,iBAIR3C,OAAmB,qCAKf0C,WALe,EAMfC,YAGRzC,KAEJ,YAAIzF,EAAqB,CACrB,IAAMpC,EAAQ,6BAIVqK,WAJU,EAKVC,WAEJhF,kBAA2BlH,YACnBA,SAAc4B,EAAlB,OACI5B,iBAGR,IAAM6J,EAAqB,YAA3B,GACA,GAAIA,SAAJ,GAKI,IAJcA,aACThP,YAAD,OACIA,SAAW+G,EAAX/G,MAAyBA,aAAe+G,EAFhD,aAKIiI,OAAwB,6BAIpBoC,WAJoB,EAKpBC,iBAIRrC,OAAwB,6BAIpBoC,WAJoB,EAKpBC,YAGRpC,UAo6BY,yBAAK5J,UAAU,qBACX,sBACIwF,YAh4CR,WAChB,GAAID,EAAJ,EAAqB,CACjBsG,OACAC,OAKA,IAAIG,EAAU,CAAEzG,YAAa,IACvB0G,EAAN,GACIC,SAAJ,GACIA,WAAiCrM,YAC7BmM,sBACAC,sBAAcpM,OAMlBsM,SAAJ,GACIA,WAA6BtM,YACzBmM,sBACAC,sBAAcpM,OAMlBuM,SAAJ,GACIA,WAAkCvM,YAC9BmM,sBACAC,sBAAcpM,OAMtB+J,KACAqC,WAAaI,YACT,IAAMxM,EAAN,SACOA,EAAP,gBACOA,EAAP,WAEJpC,oBACAuO,KACApD,UAEAgD,kBACAC,mCAi1CoBrG,WA9tCR/D,YAChB,IAAMwK,EAAN,GACA,GAAIxK,SAAJ,EACI,GAEQyK,YACAC,SADAD,GAEAE,SAJR,EAUO,CACH,IAAM5E,EAAc,CAChB2D,OAAQ,IAEZ,GAAIe,SAAJ,EAAwC,CACpC,IAAMnK,EAAoB,YAA1B,GACAA,OAAuBlC,YACnB,IAAMyM,EAAN,EAUA,OATAJ,WAAiCK,YAEzBA,SAAmB1M,EAAnB0M,MACAA,SAAmB1M,EAFvB,OAIIyM,eACAA,iBAGR,KAEJrD,KACA,IAAIR,EAAJ,EACAC,WAA4B7I,aACxB,IAAIA,aACA4I,OAGR,IAAIA,EACAjB,cAAwB,CACpBiD,aAAcyB,KAGlBT,MACAE,iBACAD,sCAED,CACH,IAAM3J,EAAoB,YAA1B,GACAA,WAA2BlC,YACvBA,kBAEJoJ,KAEJ,GAAIkD,SAAJ,EAAoC,CAChC,IAAM/C,EAAgB,YAAtB,GACAA,OAAmBvJ,YACf,IAAMyM,EAAN,EAOA,OANAH,WAA6BI,YACrBA,SAAmB1M,EAAvB,OACIyM,eACAA,iBAGR,KAEJhD,KACA,IAAIb,EAAJ,EACAtG,WAAwBtC,aACpB,IAAIA,aACA4I,OAGR,IAAIA,EACAjB,cAAwB,CACpBgF,SAAUL,KAGdV,MACAE,iBACAD,sCAED,CACH,IAAMtC,EAAgB,YAAtB,GACAA,WAAuBvJ,YACnBA,kBAEJyJ,KAEJ,GAAI8C,SAAJ,EAAyC,CACrC,IAAM1C,EAAqB,YAA3B,GACAA,WAA4B7J,YACxBuM,WAAkCG,YAC1BA,SAAmB1M,EAAvB,OACIA,eACAA,oBAIZ8J,KACA,IAAIlB,EAAJ,EACAiB,WAA4B7J,aACxB,IAAIA,aACA4I,OAGR,IAAIA,EACAjB,cAAwB,CACpBiF,cAAeL,KAGnBX,MACAE,iBACAD,sCAED,CACH,IAAMhC,EAAqB,YAA3B,GACAA,WAA4B7J,YACxBA,kBAEJ8J,KAEJ,GAAInC,gBAAJ,EAAmC,CAC/BA,KAAqBA,EAArBA,cACOA,EAAP,OACA,IAAIrE,EAAeC,qBAAnB,iBACAD,EAAeA,EAAeE,WAAH,GAA3BF,IACAA,QACAC,oCAEIC,eAFJD,IAIAqI,UACAE,MACAD,MACAhH,WA9HJ+G,MACAE,iBACAD,gDAgIJD,MACAE,iBACAD,8BAEJQ,WAAiCrM,YAC7BoM,sBAAcpM,OAElBsM,WAA6BtM,YACzBoM,sBAAcpM,OAElBuM,WAAkCvM,YAC9BoM,sBAAcpM,OAElBoM,WAAaI,mBACFA,EAAP,gBACOA,EAAP,WAEJ5O,mBAkkCwBwE,wBA95BI,SAACpC,EAAM6M,GACnCjB,UACAC,MACAC,MACA,IAAI5J,EAAoB,YAAxB,GACMiK,EAAU3I,WAAWA,eAA3B,IACA2I,UACA,IAAMW,EAAyB,YAA/B,GACA,GAAIA,SAAJ,EAAuC,CACnC,IAAMC,EAASD,aACVjS,YAAD,OAAOA,SAAWsR,EAAXtR,MAA2BA,SAAWsR,EADjD,SAGA,IAAIY,EACAD,OAA4B,CACxB5O,KAAMiO,EADkB,KAExBhR,KAAMgR,EAFkB,KAGxBnI,SAAUmI,EAHc,SAIxBpI,QAASoI,EAJe,QAKxBvK,MAAOuK,EAAQvK,QAGnBkL,WAAuCX,EAAvCW,MAGJA,WAAgCJ,YAC5BxK,WAA2BlC,YAEnBA,SAAc0M,EAAd1M,MACAA,SAAc0M,EAFlB,OAII1M,eACAA,yBAKZ8M,OAA4B,CACxB5O,KAAMiO,EADkB,KAExBhR,KAAMgR,EAFkB,KAGxBnI,SAAUmI,EAHc,SAIxBpI,QAASoI,EAJe,QAKxBvK,MAAOuK,EAAQvK,QAGnBkL,WAAgCJ,YAC5BxK,WAA2BlC,YAEnBA,SAAc0M,EAAd1M,MACAA,SAAc0M,EAFlB,OAII1M,eACAA,oBAKhBoJ,KACAlH,KACA8K,MAu2BwB3K,0BA/1BOrC,YAC/B,IAAMkC,EAAoB,YAA1B,GACMiH,EAAQjH,aACTrH,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,SAAWmF,EAD9C,QASA,IANA,IAAImJ,IACAjH,cAAoCA,KAApCA,SAIJkH,KACIiD,SAAJ,EAAwC,CACpC,IAAMS,EAAyB,YAA/B,GACM3D,EAAQ2D,aACTjS,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,SAAWmF,EAD9C,QAGA8M,cAAyCA,KAAzCA,QAGAE,OA+0BoB7K,0BATJ,GAYID,kBAZJ,EAaII,eAbJ,EAcIC,sBAdJ,GAeIC,sBA50BGxC,YAC3B,IAAMuJ,EAAgB,YAAtB,GACMJ,EAAQI,aACT1O,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,UAAYmF,EAD/C,SAQA,IALA,IAAImJ,IACAI,cAAgCA,KAAhCA,SAEJE,KAEI6C,SAAJ,EAAoC,CAChC,IAAMW,EAAqB,YAA3B,GACMC,EAAN,GACAlN,iBAAoBA,YAChBkN,OAAelN,EAAfkN,YAKJ,IAHcD,aACTpS,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBqS,WAAmBrS,EADtD,gBAIIoS,WAA4BjN,YACxBA,WAAgBA,EAAhBA,WAIR2J,OAozBoBlH,oBA1yBA,SAACzC,EAAMmN,EAAWvL,GAC1CgK,UACAC,MACAC,MACA,IAAIvC,EAAgB,YAApB,GACM4C,EAAU3I,WAAWA,eAA3B,IACA2I,eACAA,UACA,IAAMc,EAAqB,YAA3B,GACA,GAAIA,SAAJ,EAAmC,CAC/B,IAAM9D,EAAQ8D,aACTpS,YAAD,OACIA,eAAiBsR,EAAjBtR,YACAA,SAAWsR,EAHnB,SAKA,IAAIhD,EACA8D,OAAwB,CACpB/O,KAAMiO,EADc,KAEpBnI,SAAUmI,EAFU,SAGpBpI,QAASoI,EAHW,QAIpBiB,WAAYjB,EAJQ,WAKpBvK,MAAOuK,EAAQvK,QAGnBqL,WAAkCd,EAAlCc,MAEJA,WAA4BP,YACxBnD,WAAuBvJ,YACfA,SAAc0M,EAAlB,OACI1M,eACAA,yBAKZiN,OAAwB,CACpB/O,KAAMiO,EADc,KAEpBnI,SAAUmI,EAFU,SAGpBpI,QAASoI,EAHW,QAIpBiB,WAAYjB,EAJQ,WAKpBvK,MAAOuK,EAAQvK,QAEnBqL,WAA4BP,YACxBnD,WAAuBvJ,YACfA,SAAc0M,EAAlB,OACI1M,eACAA,oBAKhB2J,MACAJ,EAAgB,YAAhBA,IACIA,OAAJ,IACIA,WAAuBvJ,YACnBA,iBAAoBwJ,YACZA,WAAJ,IACIA,iBAIZC,MAEJF,MA4uBwBtF,SA1sBX,WACb,IAAMoJ,EAAY,IAAlB,KACMC,EAAQtD,GAAd,GACMT,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GAEI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,iBAAoBwJ,YAChBA,UACIyD,SAAJ,EACIA,WAA4BjN,YACpBA,eAAoBwJ,EAAxB,SACIxJ,cAIRiN,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO0L,UAKvB7D,KACAE,OA+qBoBzF,YAxqBR,WAChB,IAAIqJ,EAAW,IAAf,KACIC,EAAS,IAAb,KACAD,UAAiBA,YAAjBA,GACAC,UAAeA,YAAfA,GACAD,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAwoBoBxF,aAjoBP,WACjB,IAAMsJ,EAAQ,IAAd,KACIF,EAAW,IAAIpD,KAAKsD,EAAT,cAA8BA,EAA9B,WAAf,GACID,EAAS,IAAIrD,KAAKsD,EAAT,cAA8BA,aAA9B,EAAb,GACAF,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAkmBoBvF,eA3lBL,WACnB,IAAImJ,EAAW,IAAf,KACIC,EAAS,IAAb,KACAD,UAAiBA,YAAjBA,GACAC,UAAeA,YAAfA,IACAD,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OA2jBoBtF,aApjBP,WACjB,IAAIkJ,EAAW,IAAf,KACIC,EAAS,IAAb,KACAD,UAAiBA,YAAjBA,GACAC,UAAeA,YAAfA,GACAD,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAohBoBrF,YA7gBR,WAChB,IAAMmJ,EAAQ,IAAd,KACMC,EAAOD,YAAkBA,EAA/B,SACME,EAAKD,EAAX,EACIH,EAAW,IAAIpD,KAAKsD,UAAT,IAAf,cACID,EAAS,IAAIrD,KAAKsD,UAAT,IAAb,cACAF,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OA4eoBpF,cAreN,WAClB,IAAMmJ,EAAO,IAAb,KACMC,EAAK,IAAX,KACAD,UAAaA,YAAbA,GACAC,UAAWA,YAAXA,IACA,IAAMJ,EAAWvD,GAAjB,GACMwD,EAASxD,GAAf,GACMT,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YACnBA,mBACAA,mBACAA,iBAAoBwJ,YACZyD,SAAJ,EACIA,WAA4BjC,YACpBA,eAAmBxB,EAAvB,SACIwB,QAAYxB,EAAZwB,UAIRiC,OAAwB,CACpB/O,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpBoN,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAqcoBnF,cA7YL5C,YACnB,KAAIA,IACAA,KAEJ,IAAI2L,EAAW,IAAf,KACIC,EAAS,IAAb,KACA,MAAI5L,IACA2L,UAAiBA,YAAqBK,SAAShM,EAA/C2L,KACAC,UAAeA,YAAfA,IAEJD,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YAEnB,IAAM6N,EAAN,EACAA,mBACAA,mBACAA,iBAAqBrE,YACbyD,SAAJ,EACIA,WAA4BjC,YAExB,IAAM8C,EAAN,EACIA,eAAoBtE,EAAxB,SACIsE,QAAatE,EAAbsE,UAIRb,OAAwB,CACpB/O,KAAM2P,EADc,KAEpB7J,SAAU6J,EAFU,SAGpB9J,QAAS8J,EAHW,QAIpBT,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAoWoBlF,cA/bL7C,YACnB,KAAIA,IACAA,KAEJ,IAAI2L,EAAW,IAAf,KACIC,EAAS,IAAb,KACA,MAAI5L,IACA2L,UAAiBA,YAAjBA,GACAC,UAAeA,YAAmBI,SAAShM,EAA3C4L,MAEJD,EAAWvD,GAAXuD,GACAC,EAASxD,GAATwD,GACA,IAAMjE,EAAgB,YAAtB,GACM0D,EAAqB,YAA3B,GACI1D,SAAJ,IACIA,WAAuBvJ,YAEnB,IAAM6N,EAAN,EACAA,mBACAA,mBACAA,iBAAqBrE,YACbyD,SAAJ,EACIA,WAA4BjC,YAExB,IAAM8C,EAAN,EACIA,eAAoBtE,EAAxB,SACIsE,QAAatE,EAAbsE,UAIRb,OAAwB,CACpB/O,KAAM2P,EADc,KAEpB7J,SAAU6J,EAFU,SAGpB9J,QAAS8J,EAHW,QAIpBT,WAAY5D,EAJQ,OAKpB5H,MAAO4H,EAAW5H,cAMlC6H,KACAE,OAsZoBjH,oBA1BJ,EA2BIE,2BA3BJ,GA8BIC,0BAjWM,SAAC7C,EAAM4B,GACrCgK,UACAC,MACAC,MACA,IAAMjC,EAAqB,YAA3B,GACMkE,EAA0B,YAAhC,GACA,GAAIA,SAAJ,EAAwC,CACpC,IAAM5E,EAAQ4E,aACTlT,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,aAAemF,EADlD,aAGA,IAAImJ,EACA4E,OAA6B,CACzB7P,KAAM8B,EADmB,KAEzBgE,SAAUhE,EAFe,SAGzB+D,QAAS/D,EAHgB,QAIzB4B,UAGJmM,aAEJA,WAAiCrB,YAC7B7C,WAA4BoB,YAExB,IAAM4C,EAAN,EACIA,SAAenB,EAAnB,OACImB,eACAA,yBAKZE,OAA6B,CACzB7P,KAAM8B,EADmB,KAEzBgE,SAAUhE,EAFe,SAGzB+D,QAAS/D,EAHgB,QAIzB4B,UAEJmM,WAAiCrB,YAC7B7C,WAA4BmE,YAExB,IAAMH,EAAN,EACIA,SAAenB,EAAnB,OACImB,eACAA,oBAKhBI,MAoTwBtL,2BA9SQ3C,YAChC,IAAM6J,EAAqB,YAA3B,GACMV,EAAQU,aACThP,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,aAAemF,EADlD,aAGA,IAAImJ,IACAU,cAAqCA,KAArCA,SAGJC,KACA,IAAMiE,EAA0B,YAAhC,GACA,GAAIA,SAAJ,EAAwC,CAEpC,IAAMhB,EAASgB,aACVlT,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBA,aAAemF,EADlD,aAGA,IAAI+M,IACAgB,cAEaA,KAFbA,SAKRE,MA2RwBlF,YApCJ,GAqCIlE,YArCJ,GAsCIY,YAtCJ,EAuCIJ,qBAvCJ,EAwCIC,iBAxCJ,EAyCIC,cAzCJ,EA0CIH,qBA1CJ,GA2CID,mBA3CJ,GA4CIR,kBAl7CF,WACtBiH,OAk7CwB/H,iBA7CJ,GA8CIC,WA9CJ,GA+CI0B,gBAAiBA,QAOrC,sBACI0I,WA38CO,WAEflF,QA08CQmF,gBAFJ,EAGIC,kBAvRenD,YACvB,IAAIL,EAAJ,GACI+B,EAAJ,GACI9B,EAAJ,GACAI,WAAejL,YACX,oBAAIA,WAAkC,CAClC,IAAMkC,EAAoB,YAA1B,GACM7I,EAzBI,SAAC6E,EAAMmQ,GACzB,IAAIhV,EAAJ,GAUA,OATA6N,kBAA2BlH,YACnBA,SAAJ,GACIA,iBAAoB7E,YACZA,SAAJ,IACI9B,EAAU,YAAI8B,EAAd9B,gBAKhB,EAcwBiV,CAActO,EAAD,KAAYA,EAAzC,MACA,GAAIkC,SAAJ,GAKI,IAJcA,aACTrH,YAAD,OAAOA,SAAWmF,EAAXnF,MAAwBmF,SAAcnF,EADjD,SAKIqH,OAAuB,CACnBhE,KAAM8B,EADa,KAEnBgE,SAAUhE,EAFS,SAGnB7E,KAAM6E,EAHa,KAInB+D,QAAS/D,EAJU,QAKnB4B,MAAO5B,EALY,MAMnBmL,YAAa9R,SAIrB6I,OAAuB,CACnBhE,KAAM8B,EADa,KAEnBgE,SAAUhE,EAFS,SAGnB7E,KAAM6E,EAHa,KAInB+D,QAAS/D,EAJU,QAKnB4B,MAAO5B,EALY,MAMnBmL,YAAa9R,IAGrBuR,SACG,gBAAI5K,WAA8B,CACrC,IAAMuJ,EAAgB,YAAtB,GACA,IAAIA,WACAA,OAAmB,CACfrL,KAAM8B,EADS,KAEfgE,SAAUhE,EAFK,SAGf+D,QAAS/D,EAHM,QAIf0B,MAAO,KAEX4K,WAA6BuB,YAErBA,EAAJ,YACItE,WAAuBgF,YACnBA,aAAc,CACVhD,OAAQsC,EADE,WAEVjM,MAAOiM,EAAMjM,eAMjC+K,QACG,CACH,IAAM9C,EAAqB,YAA3B,GACA,GAAIA,SAAJ,GAII,IAHcA,aACThP,YAAD,OAAOA,SAAWmF,EADtB,SAII6J,OAAwB,CACpB3L,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpB4B,MAAO5B,EAAK4B,aAIpBiI,OAAwB,CACpB3L,KAAM8B,EADc,KAEpBgE,SAAUhE,EAFU,SAGpB+D,QAAS/D,EAHW,QAIpB4B,MAAO5B,EAAK4B,QAGpBiJ,IAEJzB,KACAK,KACAK,QAGJd,QAmMQxD,gBAJJ,GAKIgD,kBAAmB5K,EAAM4K,qBDp5CzCR,aAA4B,CACxBmG,gBAAiB3O,EADO,IAExB4O,kBAAmB5O,EAFK,IAGxB+I,oBAAqB/I,EAHG,IAIxBgG,gBAAiBhG,EAJO,IAKxBgJ,kBAAmBhJ,EALK,IAMxB0O,WAAY1O,EAAUX,KCo5C1B6J,aAAmB,CACfxB,WAAY1H,EADG,IAEfgJ,kBAAmBhJ,EAFJ,IAGfgP,eAAgBhP,EAHD,IAIf8D,aAAc9D,EAAUX,K,mBCxiDb,SAAS4P,KAKpB,IAAMC,EAAU,CACZ,CAAEvO,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,QAEnB+M,EAAe,CACjB,CAAExO,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,OACrB,CAAEzB,IAAK,MAAOyB,MAAO,QAKzBgN,GAAWtD,OAAO5O,SAAQ,SAACsD,GACvB,GAAIA,EAAK6O,MACL,IAAK,IAAIzV,KAAK4G,EAAK6O,MACkB,YAA7B7O,EAAK6O,MAAMzV,GAAG0V,WACd9O,EAAK6O,MAAMzV,GAAGC,QAAUqV,EAExB1O,EAAK6O,MAAMzV,GAAGC,QAAUsV,KA0BxC,OACI,kBAAC,GAAD,CACIzH,WAAY0H,GACZJ,eApBe,SAACO,GACpBC,QAAQC,IAAI,iBAAkBF,IAoB1BzL,aAda,SAACqE,GAClBqH,QAAQC,IAAI,eAAgBtH,M,MC/CpCuH,IAASC,OAAO,kBAACV,GAAD,MAAS/G,SAAS0H,eAAe,W","file":"static/js/main.1c350872.chunk.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--default: rgba(26, 72, 105);--default_hover: rgba(40, 70, 91);--primary: rgba(0, 164, 170);--primary-light: rgba(0, 164, 170, 0.1);--primary_hover: #06808d;--secondary: #f9fafb;--tertiary: rgba(0, 164, 170, 0.7);--linkcolor: #00b4b4;--info: #11cdef;--text-light: #566a81;--text-dark: #212529;--titlecolor: rgba(26, 72, 105);--reserved: rgba(26, 72, 105, 0.5);--danger: #ff0000;--success: #2dce89;--grey: #76728c;--white: #fff;--orange: #fb6340;--border: rgba(26, 72, 105, 0.25);--border-grey: #d8d8d8;--placeholder: rgba(26, 72, 105, 0.9);--box-shadow: rgba(32, 77, 111, 0.2);--focus: #199ed8;--em-base: 16}.neo-header{box-shadow:0px 0px 4px rgba(18,43,60,0.2);padding:15px 20px;font-size:14px}.neo-header .displayFlex{display:flex;justify-content:space-between}.neo-header .displayFlex .alignLeft{display:flex;align-items:center}.neo-header .displayFlex .alignLeft .iconLeft{width:13px}.neo-header .displayFlex .alignLeft .leftSpace{margin-left:15px;color:#20577f}.neo-header .displayFlex .marginLeft{margin-left:auto;display:flex}.neo-header .listContent{background:#f3fdfa;border:1px solid #97ead5;border-radius:20px;padding:0px 10px;margin:0.2rem;color:#1b496a}.neo-header .listContent span{color:#94889c}.neo-header .secondList .displayFlex{display:flex;align-items:center;justify-content:normal;margin-left:20px}.neo-header .filter__saved{z-index:9;box-shadow:0px 0px 30px rgba(32,77,111,0.4);position:fixed;height:100vh;width:350px;font-size:14px;color:#1f567e;line-height:32px;top:0px;left:0px;transition:0.5s;background:#fff;overflow-y:scroll}.neo-header .filter__saved .listsView{border-bottom:1px solid #bcbdd1;padding:15px}.neo-header .filter__saved .alignLeft{display:flex;align-items:center}.neo-header .filter__saved .alignLeft .marginLeft{margin-left:auto}.neo-header .filter__saved .alignLeft .leftSpace{margin-left:15px}.neo-header .filter__saved .alignLeft .selected{color:#15aacc}.neo-header .filter__saved .savedFilters{padding:15px}.neo-header .filter__saved .savedFilters .alignLeft{display:flex;align-items:center}.neo-header .filter__saved .savedFilters .alignLeft .marginLeft{margin-left:auto}.neo-header .filter__saved .savedFilters .alignLeft .leftSpace{margin-left:15px}.neo-filter{z-index:9;box-shadow:0px 0px 30px rgba(32,77,111,0.4);position:fixed;font-size:.875rem;color:#1f567e;line-height:28px;top:0px;left:0px;transition:0.5s;background:#fff;font-family:sans-serif,Arial,\\\"Segoe UI\\\",serif}.neo-filter ::-webkit-scrollbar{width:6px}.neo-filter ::-webkit-scrollbar-track{background:#f1f1f1}.neo-filter ::-webkit-scrollbar-thumb{background:#c1c1c1}.neo-filter ::-webkit-scrollbar-thumb:hover{background:#ccc}.neo-filter .filter__wrap{display:flex}.neo-filter .filter__title{border-bottom:#eff1f6 solid 1px;padding:4px 10px;text-transform:uppercase;font-size:12px;color:#7e82a7}.neo-filter .filter-count{border:#c5cadf 1px solid;padding:2px 10px;border-radius:9px;font-size:11px;margin-left:15px}.neo-filter .popup--save{position:absolute;bottom:55px;right:17px;padding:10px 15px;text-align:left;width:292px;display:flex;flex-direction:column;min-width:0;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem}.neo-filter .popup--save h5{color:rgba(40,46,108,0.74902);font-weight:700;font-style:normal;font-size:14px}.neo-filter .popup--save label{font-weight:400;font-style:normal;font-size:14px;color:rgba(40,46,108,0.996078)}.neo-filter .popup--save .txt{margin-bottom:10px;border:#ccc solid 1px;border-radius:3px}.neo-filter .popup--save .button{border:#2680e8 solid 1px;background:transparent;border-radius:3px;color:#2680e8;width:65px;margin-left:3px}.neo-filter .popup--save .btn-wrap{display:flex;justify-content:flex-end}.neo-filter .button-save span{display:block;font-size:9px}.neo-filter .filter__content{height:calc(100vh - 100px);overflow-y:scroll;overflow-x:hidden;width:320px;margin-top:5px}.neo-filter .filter__content::-webkit-scrollbar{width:3px;scroll-behavior:smooth}.neo-filter .filter__content .filter__input{margin-top:7px;padding:0 10px 15px;border-bottom:#d4d9e8 solid 1px}.neo-filter .filter__content .filter__input .filter__control{display:flex;align-items:center}.neo-filter .filter__content .filter__input-title{display:flex;justify-content:space-between}.neo-filter .filter__content .custom-switch{padding:0px !important;margin-right:20px}.neo-filter .filter__content .custom-switch .custom-control-label{vertical-align:middle;top:-5px}.neo-filter .filter__content .custom-switch .custom-control-label:after{width:16px;height:16px;border:#aaadc5 solid 1px;top:-2px;left:-37px}.neo-filter .filter__content .custom-switch .custom-control-label:before{height:2px}.neo-filter .filter__content .custom-switch .custom-control-input:checked ~ .custom-control-label::after{width:16px;height:16px;border:#aaadc5 solid 1px;top:-2px;transform:translateX(0.81rem)}.neo-filter .filter__content .custom-control-input:focus ~ .custom-control-label:before{box-shadow:none}.neo-filter .filter__content input:before:focus{outline:none;box-shadow:none}.neo-filter .filter__content .recentFilters{padding:0 0 10px 10px;border-bottom:#eee solid 1px}.neo-filter .filter__content .multiselect span{background:#eeeff3;border-radius:4px;color:#1f567e;padding:0px 10px;margin-bottom:0}.neo-filter .filter__content .multiselect .searchBox{margin-top:0}.neo-filter .filter__split{display:flex;justify-content:space-between;align-items:center}.neo-filter .leftDrawer{list-style:none;padding:0 15px;overflow-y:scroll;height:calc(100vh - 100px);width:215px;margin-bottom:0}.neo-filter .leftDrawer li.selected{font-weight:bold}.neo-filter .filter__inputwrap{padding:0;z-index:99;display:flex;flex-direction:column;justify-content:flex-start}.neo-filter .filter__btn{display:flex;margin:0px;justify-content:space-between;padding:0 10px;border-top:#ccc solid 1px;padding-top:3px;position:relative}.neo-filter .filter__btn .btn-wrap{margin-left:auto;display:flex;align-items:center}.neo-filter .filter__btn .applyFilter{background:#00b4b4;color:#fff;height:37px;padding:6px 15px 10px;font-size:14px}.neo-filter .filter__btn .reset{color:#47c9c9;font-size:14px}.neo-filter .filter__save{display:flex}.neo-filter .form-row{border-bottom:#eff1f6 solid 1px}.neo-filter .form-row .customControl{border:0;padding:0 5px 0 15px;font-size:14px}.neo-filter .date-wrap{border:#c5cadf 1px solid;border-radius:3px;position:relative}.neo-filter .date-wrap .date{border:1px solid #c5cadf;padding:5px 10px;height:30px;width:150px;color:#1f567e}.neo-filter .date-wrap .date-button{position:absolute;top:1px;right:9px;width:25px;height:25px;background:#fff;pointer-events:none}.neo-filter .date-wrap button{border:none;background:transparent}.neo-filter .date-wrap button:before{content:\\\"\\\\f073\\\";color:#9497b6;top:0px;right:10px;position:absolute;font-family:FontAwesome}.neo-filter small{color:#57809e}.neo-filter .time{border:1px solid #c5cadf;padding:5px 10px;height:30px;color:#1f567e}.neo-filter .accordion .card{border:none !important;padding:0rem !important}.neo-filter .accordion .card .card-header{display:flex}.neo-filter .accordion .card .accordionLeft{margin-left:auto}.neo-filter .accordion .card .accordionRight{margin-left:auto;transform:rotate(180deg)}.neo-filter .accordion .card-header{background-color:#fff !important;border-bottom:none !important;padding:0rem !important;position:relative;cursor:pointer}.neo-filter .accordion .card-body{padding:0rem !important}.neo-filter .accordion .firstAccordion{cursor:pointer;padding:0px;list-style:none}.neo-filter label{margin-bottom:0rem !important}.neo-filter .form-group{width:100% !important}.neo-filter .dummy{position:absolute;right:250px}.neo-filter .custom-control{display:inline-block !important;line-height:1.5rem}.neo-filter .fa-times{font-size:12px;color:#bcbdd1;vertical-align:top;margin-top:1px}.neo-filter .fieldHeads{cursor:pointer}.neo-filter .normalHeads{cursor:pointer}.neo-filter .conditionHeads{cursor:pointer}.neo-filter #daterangepicker.daterangepicker{display:block;position:relative;top:1% !important;left:1% !important;background:#fff;color:#161617}.txt{height:25px;border-radius:3px;padding:1px 0 0 3px;font-size:12px;color:#000;border:#cfd0d0 solid 1px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconTimes } from \"../images/icon-close.svg\";\n\nexport default function AutoComplete(props) {\n    const [autoCompleteArr, setAutoAcompleteArr] = useState([]);\n    useEffect(() => {\n        setAutoAcompleteArr(props.autoCompleteArray);\n    }, [props.autoCompleteArray]);\n    /**\n     * Method To close the filter\n     * @param {*} item is specific filter element\n     */\n    const handleClose = (item) => {\n        props.deleteAutoCompleteElement(item);\n    };\n    /**\n     * Method To pass the selected list of values to create value array\n     * @param {*} selectedList is entire list of selected\n     * @param {*} selectedItem is specific item selected now\n     * @param {*} item is specific filter element\n     */\n    const onSelect = (selectedList, selectedItem, item) => {\n        props.createAutoCompleteArray(item, selectedList);\n    };\n    const autoCompleteDiv = autoCompleteArr.map((item) => {\n        let validationClass = \"\";\n        if (item.validated === false) {\n            validationClass = \"text-danger\";\n        }\n        return (\n            <div className=\"filter__input\" key={item}>\n                <div className=\"filter__input-title\">\n                    <div className=\"filter__label\">\n                        <span>{item.name}</span>\n                        <span>&nbsp;&gt;&nbsp;</span>\n                        <span>{item.type}</span>\n                    </div>\n                    <div className=\"filter__control\">\n                        <Form.Check\n                            type=\"switch\"\n                            label=\"\"\n                            className={item.type.concat(item.name)}\n                            id={item.name.concat(item.type)}\n                            checked={item.enabled}\n                            data-testid=\"handleAutoCompleteEnabled-check\"\n                            onChange={() => {\n                                props.handleAutoCompleteEnabled(item);\n                            }}\n                        />\n                        <div\n                            role=\"presentation\"\n                            data-testid=\"deleteAutoCompleteElement-click\"\n                            onClick={() => {\n                                handleClose(item);\n                            }}\n                        >\n                            <IconTimes />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"displayFlex multiselect\">\n                    <Multiselect\n                        id={item.type.concat(item.name)}\n                        disable={!item.enabled}\n                        options={item.objectArray}\n                        closeIcon=\"close\"\n                        displayValue=\"key\"\n                        className=\"form-control\"\n                        selectedValues={item.value}\n                        onSelect={(e) => {\n                            onSelect(e, e[e.length - 1], item);\n                        }}\n                    />\n                </div>\n                <span id=\"fieldWarning\" className={validationClass}>\n                    {item.warning}\n                </span>\n            </div>\n        );\n    });\n    return <div>{autoCompleteDiv}</div>;\n}\n\nAutoComplete.propTypes = {\n    autoCompleteArray: PropTypes.any,\n    deleteAutoCompleteElement: PropTypes.any,\n    createAutoCompleteArray: PropTypes.any,\n    handleAutoCompleteEnabled: PropTypes.any\n};\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconTimes } from \"../images/icon-close.svg\";\n\nexport default function FieldComponent(props) {\n    const [fieldComponentArr, setFieldComponentArr] = useState([]);\n    useEffect(() => {\n        setFieldComponentArr(props.dateTimesArray);\n    }, [props.dateTimesArray]);\n    /**\n     * Method To close the filter\n     * @param {*} item is specific filter element\n     */\n    const handleClose = (item) => {\n        props.deleteDateTimeElement(item);\n    };\n    const fieldComponentDiv = fieldComponentArr.map((item) => {\n        let validationClass = \"\";\n        if (item.validated === false) {\n            validationClass = \"text-danger\";\n        }\n        return (\n            <div className=\"filter__input\" key={item}>\n                <div className=\"filter__input-title\" key={1}>\n                    <div className=\"filter__label\">\n                        <Form.Label>\n                            <strong>{item.name}</strong>\n                        </Form.Label>\n                    </div>\n                    <div className=\"filter__control\">\n                        <Form.Check\n                            type=\"switch\"\n                            id={item.name}\n                            label=\"\"\n                            defaultChecked={item.enabled}\n                            data-testid=\"handleDateTimeEnabled-check\"\n                            onChange={() => {\n                                props.handleDateTimeEnabled(item);\n                            }}\n                        />\n                        <div\n                            role=\"presentation\"\n                            data-testid=\"deleteDateTimeElement-click\"\n                            onClick={() => {\n                                handleClose(item);\n                            }}\n                        >\n                            <IconTimes />\n                        </div>\n                    </div>\n                </div>\n                {item.field.map((field) => {\n                    return (\n                        <div key={`${field}-${field.name}`}>\n                            <div\n                                className=\"displayFlex\"\n                                key={`${field},${field.name}`}\n                            >\n                                <Form.Text>{field.column}</Form.Text>\n                            </div>\n                            <div className=\"filter__split\" key={field}>\n                                <div className=\"date-wrap\">\n                                    <Form.Control\n                                        disabled={!item.enabled}\n                                        type=\"datetime-local\"\n                                        value={field.value}\n                                        className={field.name}\n                                        data-testid=\"createDateTimeArray-input\"\n                                        onChange={(e) => {\n                                            props.createDateTimeArray(\n                                                item,\n                                                field.column,\n                                                e.target.value\n                                            );\n                                        }}\n                                    />\n                                    {/* <span className=\"date-button\">\n                                        <button type=\"button\" />\n                                    </span> */}\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n                <span id=\"fieldWarning\" className={validationClass}>\n                    {item.warning}\n                </span>\n            </div>\n        );\n    });\n    return <div>{fieldComponentDiv}</div>;\n}\n\nFieldComponent.propTypes = {\n    dateTimesArray: PropTypes.any,\n    deleteDateTimeElement: PropTypes.any,\n    handleDateTimeEnabled: PropTypes.any,\n    createDateTimeArray: PropTypes.any\n};\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconTimes } from \"../images/icon-close.svg\";\n\nexport default function TextComponents(props) {\n    const [textComponentArr, setTextComponentArr] = useState([]);\n    useEffect(() => {\n        setTextComponentArr(props.textComponentsArray);\n    }, [props.textComponentsArray]);\n\n    const textComponentDiv = textComponentArr.map((item) => {\n        let validationClass = \"\";\n        if (item.validated === false) {\n            validationClass = \"text-danger\";\n        }\n        return (\n            <div key={item}>\n                <div className=\"filter__input\">\n                    <div className=\"filter__input-title\">\n                        <div className=\"filter__label\">\n                            <span>{item.name}</span>\n                        </div>\n                        <div className=\"filter__control\">\n                            <Form.Check\n                                type=\"switch\"\n                                label=\"\"\n                                id={item.name}\n                                checked={item.enabled}\n                                data-testid=\"handleTextComponentEnabled-check\"\n                                onChange={() => {\n                                    props.handleTextComponentEnabled(item);\n                                }}\n                            />\n                            <div\n                                role=\"presentation\"\n                                data-testid=\"deleteTextComponentElement-button\"\n                                onClick={() => {\n                                    props.deleteTextComponentElement(item);\n                                }}\n                            >\n                                <IconTimes />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"displayFlex\">\n                        <input\n                            id={item.name.concat(item.dataType)}\n                            disabled={!item.enabled}\n                            type=\"text\"\n                            defaultValue={item.value}\n                            className=\"form-control\"\n                            data-testid=\"createTextComponentsArray-input\"\n                            onChange={(e) => {\n                                props.createTextComponentsArray(\n                                    item,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    </div>\n                    <span id=\"fieldWarning\" className={validationClass}>\n                        {item.warning}\n                    </span>\n                </div>\n            </div>\n        );\n    });\n\n    return <div>{textComponentDiv}</div>;\n}\n\nTextComponents.propTypes = {\n    textComponentsArray: PropTypes.any,\n    handleTextComponentEnabled: PropTypes.any,\n    deleteTextComponentElement: PropTypes.any,\n    createTextComponentsArray: PropTypes.any\n};\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport AutoComplete from \"../types/AutoCompleteComponent\";\nimport FieldComponent from \"../types/DateTimeComponent\";\nimport TextComponents from \"../types/TextComponents\";\nimport { ReactComponent as SaveLogo } from \"../images/save-icon.svg\";\n\nconst RightDrawer = (props) => {\n    const [showSavePopup, setShowSavePopup] = useState(\"none\");\n    const [saveFilterName, setSaveFilterName] = useState(\"\");\n    const [saveFilterWarning, setSaveFilterWarning] = useState(\"\");\n    const [warningLabel, setWarningLabel] = useState(\"\");\n    const [applyFilterWarning, setApplyFilterWarning] = useState(\"\");\n    const [\n        applyfilterWarningClassName,\n        setApplyFilterWariningClassname\n    ] = useState(\"\");\n    const [recentFilterShow, setRecentFilterShow] = useState(\"none\");\n    const [filterShow, setFilterShow] = useState(\"\");\n    useEffect(() => {\n        setApplyFilterWarning(props.emptyFilterWarning);\n        setApplyFilterWariningClassname(props.emptyFilterClassName);\n    }, [props.emptyFilterWarning, props.emptyFilterClassName]);\n    useEffect(() => {\n        setWarningLabel(props.saveWarningClassName);\n        setSaveFilterWarning(props.saveWarningLabel);\n        setShowSavePopup(props.showSavePopUp);\n    }, [\n        props.saveWarningClassName,\n        props.saveWarningLabel,\n        props.showSavePopUp\n    ]);\n    useEffect(() => {\n        setRecentFilterShow(props.recentFilterShow);\n        setFilterShow(props.filterShow);\n    }, [props.recentFilterShow, props.filterShow]);\n    /**\n     * Method To pass the required name of the filter required to be saved\n     * @param {*} e is event triggered when typing on the to-save filter name field\n     */\n    const registersaveFilterName = (e) => {\n        setSaveFilterName(e.target.value);\n    };\n\n    /**\n     * Method To close the save popup on clicking cancel button\n     */\n    const cancelSavePopup = () => {\n        setShowSavePopup(\"none\");\n        setSaveFilterWarning(\"\");\n        setWarningLabel(\"\");\n    };\n    let savedFilters = localStorage.getItem(\"savedFilters\");\n    savedFilters = savedFilters ? JSON.parse(savedFilters) : [];\n    if (savedFilters.length > 2) {\n        savedFilters = savedFilters.slice(\n            savedFilters.length - 2,\n            savedFilters.length\n        );\n    }\n    const recent = savedFilters.map((filterArray) => {\n        return (\n            <div\n                role=\"presentation\"\n                className=\"recentFilters\"\n                data-testid=\"recentFilters-div\"\n                key={filterArray}\n                onClick={() => {\n                    props.addSavedFilters(filterArray);\n                }}\n            >\n                {Object.keys(filterArray)[0]}\n            </div>\n        );\n    });\n    return (\n        <div>\n            <div\n                style={{ display: recentFilterShow }}\n                className=\"filter__content\"\n            >\n                <div>Recent Filters</div>\n                {recent}\n            </div>\n\n            <div style={{ display: filterShow }}>\n                <div className=\"filter__title\">\n                    Selected Filters\n                    <span className=\"filter-count\">{props.filterCount}</span>\n                </div>\n                <div className=\"filter__content\">\n                    <AutoComplete\n                        name={props.name}\n                        type={props.type}\n                        enabled={props.enabled}\n                        dataType={props.dataType}\n                        options={props.options}\n                        autoCompleteArray={props.autoCompleteArray}\n                        deleteAutoCompleteElement={\n                            props.deleteAutoCompleteElement\n                        }\n                        handleAutoCompleteEnabled={\n                            props.handleAutoCompleteEnabled\n                        }\n                        createAutoCompleteArray={props.createAutoCompleteArray}\n                    />\n                    <FieldComponent\n                        dateTimesArray={props.dateTimesArray}\n                        deleteDateTimeElement={props.deleteDateTimeElement}\n                        handleDateTimeEnabled={props.handleDateTimeEnabled}\n                        createDateTimeArray={props.createDateTimeArray}\n                        addToday={props.addToday}\n                        addTomorrow={props.addTomorrow}\n                        addThisMonth={props.addThisMonth}\n                        addForteenDays={props.addForteenDays}\n                        addSevenDays={props.addSevenDays}\n                        addThisWeek={props.addThisWeek}\n                        addThirtyDays={props.addThirtyDays}\n                        lastDayChange={props.lastDayChange}\n                        nextDayChange={props.nextDayChange}\n                    />\n                    <TextComponents\n                        textComponentsArray={props.textComponentsArray}\n                        deleteTextComponentElement={\n                            props.deleteTextComponentElement\n                        }\n                        createTextComponentsArray={\n                            props.createTextComponentsArray\n                        }\n                        handleTextComponentEnabled={\n                            props.handleTextComponentEnabled\n                        }\n                    />\n                </div>\n                <div className=\"filter__btn\">\n                    <div className=\"filter__save\">\n                        <Button\n                            className=\"button-save\"\n                            variant=\"\"\n                            onClick={props.openShowSavePopUp}\n                        >\n                            <SaveLogo />\n                            <span>SAVE</span>\n                        </Button>\n                    </div>\n                    <div className=\"btn-wrap\">\n                        <span className={applyfilterWarningClassName}>\n                            {applyFilterWarning}\n                        </span>\n                        <Button\n                            variant=\"\"\n                            className=\"reset\"\n                            onClick={props.resetDrawer}\n                        >\n                            Reset\n                        </Button>\n                        <Button\n                            variant=\"\"\n                            className=\"applyFilter\"\n                            data-testid=\"applyFilter-button\"\n                            onClick={() => {\n                                props.applyFilter();\n                                props.deleteAutoCompleteElement({});\n                                props.deleteDateTimeElement({});\n                                props.deleteTextComponentElement({});\n                            }}\n                        >\n                            Apply Filter\n                        </Button>\n                    </div>\n                    <div\n                        style={{ display: showSavePopup }}\n                        className=\"popup--save\"\n                    >\n                        <h5>Save the Filter</h5>\n                        <span className={warningLabel}>\n                            {saveFilterWarning}\n                        </span>\n                        <label htmlFor=\"saveFilterName\">\n                            Save Filter Name\n                            <input\n                                id=\"saveFilterName\"\n                                className=\"txt\"\n                                value={saveFilterName}\n                                data-testid=\"registersaveFilterName-input\"\n                                onChange={(e) => registersaveFilterName(e)}\n                            />\n                        </label>\n                        <div className=\"btn-wrap\">\n                            <button\n                                type=\"button\"\n                                className=\"button\"\n                                data-testid=\"cancelSavePopup-button\"\n                                onClick={() => {\n                                    cancelSavePopup();\n                                }}\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"button\"\n                                data-testid=\"saveFilter-button\"\n                                onClick={() => {\n                                    props.saveFilter(saveFilterName);\n                                    // setSaveFilterName(\"\");\n                                }}\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nRightDrawer.propTypes = {\n    emptyFilterWarning: PropTypes.any,\n    emptyFilterClassName: PropTypes.any,\n    saveWarningClassName: PropTypes.any,\n    saveWarningLabel: PropTypes.any,\n    showSavePopUp: PropTypes.any,\n    recentFilterShow: PropTypes.any,\n    filterShow: PropTypes.any,\n    addSavedFilters: PropTypes.any,\n    filterCount: PropTypes.any,\n    name: PropTypes.any,\n    type: PropTypes.any,\n    enabled: PropTypes.any,\n    dataType: PropTypes.any,\n    options: PropTypes.any,\n    autoCompleteArray: PropTypes.any,\n    deleteAutoCompleteElement: PropTypes.any,\n    handleAutoCompleteEnabled: PropTypes.any,\n    createAutoCompleteArray: PropTypes.any,\n    dateTimesArray: PropTypes.any,\n    deleteDateTimeElement: PropTypes.any,\n    handleDateTimeEnabled: PropTypes.any,\n    createDateTimeArray: PropTypes.any,\n    addToday: PropTypes.any,\n    addTomorrow: PropTypes.any,\n    addThisMonth: PropTypes.any,\n    addForteenDays: PropTypes.any,\n    addSevenDays: PropTypes.any,\n    addThisWeek: PropTypes.any,\n    lastDayChange: PropTypes.any,\n    nextDayChange: PropTypes.any,\n    textComponentsArray: PropTypes.any,\n    deleteTextComponentElement: PropTypes.any,\n    createTextComponentsArray: PropTypes.any,\n    handleTextComponentEnabled: PropTypes.any,\n    openShowSavePopUp: PropTypes.any,\n    resetDrawer: PropTypes.any,\n    applyFilter: PropTypes.any,\n    saveFilter: PropTypes.any,\n    addThirtyDays: PropTypes.any\n};\n\nexport default RightDrawer;\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Accordion, Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconUpArrow } from \"../images/downarrow.svg\";\n\nexport default function LeftDrawer(props) {\n    const [leftDrawData, setLeftDrawData] = useState([]);\n    const [leftDrawTemp, setLeftDrawTemp] = useState([]);\n    const [showUpArrow, setShowUpArrow] = useState(\"\");\n    const [showDownArrow, setShowDownArrow] = useState(\"none\");\n\n    useEffect(() => {\n        const typeArray = [];\n        setLeftDrawData(props.filterData.filter);\n        setLeftDrawTemp(props.filterData.filter);\n        props.filterData.filter.forEach((item) => {\n            if (item.types) {\n                item.types.forEach((type) => {\n                    typeArray.push(type.name);\n                });\n            }\n        });\n    }, [props.filterData.filter]);\n    /**\n     * Method To filter out the filters displayed at the left drawer\n     * @param {*} e triggered on typing on the search field\n     */\n    const searchFilterHandler = (e) => {\n        let filteredList = [];\n        // eslint-disable-next-line no-unused-vars\n        const searchKey = e.target.value;\n        if (leftDrawData) {\n            filteredList = leftDrawTemp.filter((item) => {\n                return (\n                    item.name &&\n                    item.name.toLowerCase().includes(searchKey.toLowerCase())\n                );\n            });\n        }\n        setLeftDrawData(filteredList);\n    };\n\n    const handleAccordian = () => {\n        if (showUpArrow === \"\" || showDownArrow === \"none\") {\n            setShowUpArrow(\"none\");\n            setShowDownArrow(\"\");\n        } else {\n            setShowUpArrow(\"\");\n            setShowDownArrow(\"none\");\n        }\n    };\n\n    const accordianHeads = leftDrawData.map((item) => {\n        if (item.types.length) {\n            return (\n                <div key={item}>\n                    <Accordion>\n                        <Card>\n                            <Accordion.Toggle\n                                data-testid=\"handleAccordianArrow\"\n                                onClick={() => {\n                                    handleAccordian();\n                                }}\n                                style={{ fontWeight: item.weight }}\n                                as={Card.Header}\n                                eventKey=\"1\"\n                            >\n                                {item.name}\n                                <div\n                                    className=\"accordionLeft\"\n                                    style={{ display: showUpArrow }}\n                                >\n                                    <IconUpArrow />\n                                </div>\n                                <div\n                                    className=\"accordionRight\"\n                                    style={{ display: showDownArrow }}\n                                >\n                                    <IconUpArrow />\n                                </div>\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                    <ul className=\"firstAccordion\" key={item}>\n                                        {item.types &&\n                                            item.types.map((type) => {\n                                                return (\n                                                    <li\n                                                        role=\"presentation\"\n                                                        style={{\n                                                            fontWeight:\n                                                                type.weight\n                                                        }}\n                                                        data-testid=\"firstAccordion\"\n                                                        onClick={() => {\n                                                            props.fromLeftToRight(\n                                                                item.name,\n                                                                type.dataType,\n                                                                type.enabled,\n                                                                type.name,\n                                                                item.field,\n                                                                item.condition,\n                                                                type.dataSource,\n                                                                type.validationMessage,\n                                                                type.options\n                                                            );\n                                                            // props.addedFilterCount();\n                                                        }}\n                                                        key={type}\n                                                    >\n                                                        {type.name}\n                                                    </li>\n                                                );\n                                            })}\n                                    </ul>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </div>\n            );\n        }\n        return <div key={item} />;\n    });\n    const fieldHeads = leftDrawData.map((item) => {\n        if (item.field.length) {\n            return (\n                <div className=\"fieldHeads\" key={item}>\n                    <li\n                        role=\"presentation\"\n                        style={{ fontWeight: item.weight }}\n                        data-testid=\"fieldHeads\"\n                        onClick={() => {\n                            props.fromLeftToRight(\n                                item.name,\n                                item.dataType,\n                                item.enabled,\n                                item.types,\n                                item.field,\n                                item.condition,\n                                item.dataSource,\n                                item.validationMessage,\n                                item.options\n                            );\n                            // props.addedFilterCount();\n                        }}\n                    >\n                        {item.name}\n                    </li>\n                </div>\n            );\n        }\n        return <div key={item} />;\n    });\n    // const conditionHeads = leftDrawData.map((item, index) => {\n    //     if (item.condition.length) {\n    //         return (\n    //             <div className=\"conditionHeads\" key={index}>\n    //                 <li\n    //                     role=\"presentation\"\n    //                     style={{ fontWeight: item.weight }}\n    //                     onClick={() => {\n    //                         props.fromLeftToRight(\n    //                             item.name,\n    //                             item.dataType,\n    //                             item.enabled,\n    //                             item.types,\n    //                             item.field,\n    //                             item.condition,\n    //                             item.dataSource,\n    //                             item.validationMessage,\n    //                             item.options\n    //                         );\n    //                         // props.addedFilterCount();\n    //                     }}\n    //                 >\n    //                     {item.name}\n    //                 </li>\n    //             </div>\n    //         );\n    //     }\n    //     return <div key={index} />;\n    // });\n    const normalHeads = leftDrawData.map((item) => {\n        if (\n            !(item.condition.length || item.types.length || item.field.length)\n        ) {\n            return (\n                <div className=\"normalHeads\" key={item}>\n                    <li\n                        role=\"presentation\"\n                        style={{ fontWeight: item.weight }}\n                        data-testid=\"normalHeads\"\n                        onClick={() => {\n                            props.fromLeftToRight(\n                                item.name,\n                                item.dataType,\n                                item.enabled,\n                                item.types,\n                                item.field,\n                                item.condition,\n                                item.dataSource,\n                                item.validationMessage,\n                                item.options\n                            );\n                            // props.addedFilterCount();\n                        }}\n                    >\n                        {item.name}\n                    </li>\n                </div>\n            );\n        }\n        return <div key={item} />;\n    });\n    return (\n        <div>\n            <Form.Row>\n                <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Search a Filter\"\n                    defaultValue=\"\"\n                    className=\"customControl\"\n                    data-testid=\"searchFilterHandler-input\"\n                    onChange={searchFilterHandler}\n                />\n            </Form.Row>\n            <div className=\"leftDrawer\">\n                <div>{accordianHeads}</div>\n                <div>{fieldHeads}</div>\n                <div>{normalHeads}</div>\n            </div>\n        </div>\n    );\n}\n\nLeftDrawer.propTypes = {\n    filterData: PropTypes.any,\n    fromLeftToRight: PropTypes.any\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconCheck } from \"../images/icon-check.svg\";\n\nconst SavedFilters = (props) => {\n    const [showFilter, setShowFilter] = useState(false);\n    const listRef = useRef();\n    useEffect(() => {\n        const listHandler = (event) => {\n            if (listRef.current && !listRef.current.contains(event.target)) {\n                setShowFilter(false);\n                props.handleListFilter();\n            }\n        };\n        setShowFilter(props.showFilter);\n        document.addEventListener(\"mousedown\", listHandler);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", listHandler);\n        };\n    }, [props]);\n\n    const keyValue = \"\";\n    let savedFilters = localStorage.getItem(\"savedFilters\");\n    savedFilters = savedFilters ? JSON.parse(savedFilters) : [];\n\n    const savedFilter = savedFilters.map((filterArray) => {\n        return (\n            <div key={filterArray}>\n                <div className=\"alignLeft\">\n                    <div>\n                        <IconCheck />\n                    </div>\n                    <div\n                        role=\"presentation\"\n                        style={{ marginLeft: \"15px\" }}\n                        data-testid=\"addSavedFilters-check\"\n                        onClick={() => {\n                            // below two methods are required for closing the savedFilter list popUp\n                            setShowFilter(false);\n                            props.handleListFilter();\n                            props.addSavedFilters(filterArray);\n                        }}\n                    >\n                        {Object.keys(filterArray)[0]}\n                    </div>\n                </div>\n            </div>\n        );\n    });\n    if (showFilter) {\n        return (\n            <div className=\"filter__saved\" ref={listRef}>\n                <div className=\"savedFilters\">\n                    <div className=\"text-muted\">Saved Filters</div>\n                    <ul key={keyValue} className=\"leftSpace\">\n                        {savedFilter}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n};\n\nSavedFilters.propTypes = {\n    handleListFilter: PropTypes.any,\n    showFilter: PropTypes.any,\n    addSavedFilters: PropTypes.any\n};\n\nexport default SavedFilters;\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as IconLeftAlign } from \"../images/icon-leftAlign.svg\";\nimport SavedFilters from \"./SavedFilters\";\n\nlet chips;\nlet chipCount;\nconst MainFilterPanel = (props) => {\n    const [listFilter, setListFilter] = useState(false);\n    const [chipArray, setChipArray] = useState([]);\n    const [countShow, setCountShow] = useState(\"none\");\n    useEffect(() => {\n        setChipArray(props.applyFilterChip.applyFilter);\n        if (\n            props.applyFilterChip.applyFilter &&\n            props.applyFilterChip.applyFilter.length > 0\n        ) {\n            setCountShow(\"\");\n        } else {\n            setCountShow(\"none\");\n        }\n    }, [props.applyFilterChip]);\n    const handleListFilter = () => {\n        setListFilter(!listFilter);\n    };\n    if (chipArray) {\n        chipCount = chipArray.length;\n        chips = chipArray.map((item) => {\n            if (item.type) {\n                return (\n                    <div\n                        role=\"presentation\"\n                        className=\"listContent\"\n                        key={item}\n                        onClick={() => {\n                            props.addAppliedFilters(chipArray);\n                        }}\n                    >\n                        <span>\n                            {item.name}:{item.type}\n                        </span>\n                        {item.value.map((value) => {\n                            return <div key={value}>{value.value}</div>;\n                        })}\n                    </div>\n                );\n            }\n            if (item.condition) {\n                return (\n                    <div\n                        role=\"presentation\"\n                        className=\"listContent\"\n                        key={item}\n                        onClick={() => {\n                            props.addAppliedFilters(chipArray);\n                        }}\n                    >\n                        <span>{item.name}</span>:{item.condition}\n                        {item.amount}\n                    </div>\n                );\n            }\n            if (item.fieldValue) {\n                return (\n                    <div\n                        role=\"presentation\"\n                        className=\"listContent\"\n                        key={item}\n                        onClick={() => {\n                            props.addAppliedFilters(chipArray);\n                        }}\n                    >\n                        <span>{item.fieldValue}</span>\n                        {item.value}\n                    </div>\n                );\n            }\n            return (\n                <div\n                    role=\"presentation\"\n                    className=\"listContent\"\n                    key={item}\n                    onClick={() => {\n                        props.addAppliedFilters(chipArray);\n                    }}\n                >\n                    <span>{item.name}</span>:{item.value}\n                </div>\n            );\n        });\n    } else {\n        chips = <div />;\n    }\n\n    return (\n        <div className=\"neo-header\">\n            <div className=\"displayFlex\">\n                <div className=\"alignLeft\">\n                    <div\n                        role=\"presentation\"\n                        className=\"iconLeft\"\n                        onClick={handleListFilter}\n                    >\n                        <IconLeftAlign />\n                    </div>\n                    <SavedFilters\n                        onSelectSavedFilter={props.onSelectSavedFilter}\n                        showFilter={listFilter}\n                        handleListFilter={handleListFilter}\n                        addSavedFilters={props.addSavedFilters}\n                        addingToFavourite={props.addingToFavourite}\n                    />\n                    <div className=\"leftSpace\">All flights</div>\n                </div>\n            </div>\n            <div className=\"secondList\">\n                <div className=\"displayFlex\">\n                    <span\n                        style={{ display: countShow }}\n                        className=\"listContent\"\n                    >\n                        count:{chipCount}\n                    </span>\n                    {chips}\n                    <div\n                        role=\"presentation\"\n                        onClick={() => {\n                            props.showDrawer();\n                        }}\n                        className=\"addFilter\"\n                    >\n                        + Add Filter\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nMainFilterPanel.propTypes = {\n    applyFilterChip: PropTypes.any,\n    addAppliedFilters: PropTypes.any,\n    onSelectSavedFilter: PropTypes.any,\n    addSavedFilters: PropTypes.any,\n    addingToFavourite: PropTypes.any,\n    showDrawer: PropTypes.any\n};\n\nexport default MainFilterPanel;\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RightDrawer from \"./drawer/RightDrawer\";\nimport LeftDrawer from \"./drawer/LeftDrawer\";\nimport MainFilterPanel from \"./panel/MainFilterPanel\";\n// eslint-disable-next-line import/no-unresolved\nimport \"!style-loader!css-loader!sass-loader!./Styles/main.scss\";\n\n/**\n * Component handling clock outside close of Drawer\n */\nfunction useComponentVisible() {\n    const [showApplyFilter, setApplyFilter] = useState(false);\n\n    const ref = useRef(null);\n\n    /**\n     * Method To sort the rows for a particular column\n     * @param {*} event is the event that is getting passed when an outside click is triggered\n     */\n    const handleHideDropdown = (event) => {\n        if (event.key === \"Escape\") {\n            setApplyFilter(false);\n        }\n    };\n    /**\n     * Method To sort the rows for a particular column\n     * @param {*} event it is the event triggered on the ref div when click happens\n     */\n    const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setApplyFilter(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, showApplyFilter, setApplyFilter };\n}\nexport default function Filter(props) {\n    const [autoCompletesValueArray, setAutoCompletesValueArray] = useState([]);\n    const [autoCompletesArray, setAutoCompletesArray] = useState([]);\n    const [dateTimesArray, setDateTimesArray] = useState([]);\n    const [dateTimesValueArray, setDateTimesValueArray] = useState([]);\n    const [textComponentsArray, setTextComponentsArray] = useState([]);\n    const [textComponentsValueArray, setTextComponentsValueArray] = useState(\n        []\n    );\n    const [applyFilterChip, setApplyFilterChip] = useState({});\n    const [filterCount, setFilterCount] = useState(0);\n    const [filterData, setFilterData] = useState({});\n    const [showSavePopUp, setShowSavePopUp] = useState(\"none\");\n    const [saveWarningLabel, setSaveWarningLabel] = useState(\"\");\n    const [saveWarningClassName, setSaveWarningClassName] = useState(\"\");\n    const [emptyFilterWarning, setEmptyFilterWarning] = useState(\"\");\n    const [emptyFilterClassName, setEmptyFilterClassName] = useState(\"\");\n    const [recentFilterShow, setRecentFilterShow] = useState(\"none\");\n    const [filterShow, setFilterShow] = useState(\"\");\n\n    useEffect(() => {\n        setFilterData(props.filterData);\n    }, [props.filterData]);\n    useEffect(() => {\n        let count = 0;\n        count =\n            autoCompletesArray.length +\n            dateTimesArray.length +\n            textComponentsArray.length;\n        setFilterCount(count);\n    }, [autoCompletesArray, dateTimesArray, textComponentsArray]);\n    /**\n     * Method set the state which shows the drawer when on true condition\n     */\n    const showDrawer = () => {\n        // eslint-disable-next-line no-use-before-define\n        setApplyFilter(true);\n    };\n    /**\n     * Method set the state which closes the drawer when the state is in false condition\n     */\n    const closeDrawer = () => {\n        // eslint-disable-next-line no-use-before-define\n        setApplyFilter(false);\n    };\n    /**\n     * Method To show the save popup\n     */\n    const openShowSavePopUp = () => {\n        setShowSavePopUp(\"\");\n    };\n    /**\n     * Method which creates the array which contains the elements to be shown in the applied filter chips\n     */\n\n    const applyFilter = () => {\n        if (filterCount > 0) {\n            setEmptyFilterClassName(\"\");\n            setEmptyFilterWarning(\"\");\n            // eslint-disable-next-line no-shadow\n            const applyFilter = {\n                applyFilterArray: []\n            };\n            let tempObj = { applyFilter: [] };\n            const obj = [];\n            if (autoCompletesValueArray.length > 0) {\n                autoCompletesValueArray.forEach((item) => {\n                    tempObj.applyFilter.push(item);\n                    obj.push({ ...item });\n                });\n                applyFilter.applyFilterArray.push({\n                    autoComplete: autoCompletesValueArray\n                });\n            }\n            if (dateTimesValueArray.length > 0) {\n                dateTimesValueArray.forEach((item) => {\n                    tempObj.applyFilter.push(item);\n                    obj.push({ ...item });\n                });\n                applyFilter.applyFilterArray.push({\n                    dateTime: dateTimesValueArray\n                });\n            }\n            if (textComponentsValueArray.length > 0) {\n                textComponentsValueArray.forEach((item) => {\n                    tempObj.applyFilter.push(item);\n                    obj.push({ ...item });\n                });\n                applyFilter.applyFilterArray.push({\n                    textComponent: textComponentsValueArray\n                });\n            }\n            setApplyFilterChip(tempObj);\n            obj.forEach((objec) => {\n                const item = objec; // Added for no-param-reassign lint errors\n                delete item.dataType;\n                delete item.enabled;\n            });\n            props.appliedFilters(obj);\n            tempObj = {};\n            closeDrawer();\n        } else {\n            setEmptyFilterClassName(\"text-danger\");\n            setEmptyFilterWarning(\"No Filter is being selected\");\n        }\n    };\n\n    /**\n     * Method To delete the specific element from filter array upon clicking close\n     * @param {*} item is the specific filter element object\n     */\n    /* eslint-disable no-param-reassign */\n    const deleteAutoCompleteElement = (item) => {\n        filterData.filter.forEach((it) => {\n            it.types.forEach((tip) => {\n                if (tip.name === item.type && item.name === it.name) {\n                    tip.weight = 400;\n                }\n            });\n        });\n        let autoCompleteArray = [...autoCompletesArray];\n        const index = autoCompleteArray.findIndex(\n            (x) => x.name === item.name && x.type === item.type\n        );\n        if (index !== -1) {\n            autoCompleteArray.splice(index, 1);\n        } else {\n            autoCompleteArray = [];\n        }\n        setAutoCompletesArray(autoCompleteArray);\n        autoCompleteArray.forEach((aut) => {\n            filterData.filter.forEach((fit) => {\n                if (fit.types && fit.name !== aut.name && fit.weight === 700) {\n                    fit.weight = 400;\n                }\n            });\n        });\n    };\n\n    /**\n     * Method To delete the specific element from filter array upon clicking close\n     * @param {*} item is the specific filter element object\n     */\n    /* eslint-disable no-param-reassign */\n    const deleteDateTimeElement = (item) => {\n        filterData.filter.forEach((it) => {\n            if (it.name === item.name) {\n                it.weight = 400;\n            }\n        });\n        filterData.filter.forEach((it) => {\n            if (it.name === item.name) {\n                item.weight = 400;\n            }\n        });\n        const dateTimeArray = [...dateTimesArray];\n        const index = dateTimeArray.findIndex((x) => x.name === item.name);\n        dateTimeArray.splice(index, 1);\n        // eslint-disable-next-line no-shadow\n        dateTimeArray.forEach((item) => {\n            item.field.forEach((fieldArray) => {\n                fieldArray.value = \"\";\n            });\n        });\n        setDateTimesArray(dateTimeArray);\n        filterData.filter.forEach((filters) => {\n            if (filters.name === item.name) {\n                item.field.forEach((fieldArray) => {\n                    fieldArray.value = \"\";\n                });\n            }\n        });\n        if (item === {}) {\n            setDateTimesValueArray([]);\n        }\n    };\n\n    /**\n     * Method To delete the specific element from filter array upon clicking close\n     * @param {*} item is the specific filter element object\n     */\n    const deleteTextComponentElement = (item) => {\n        filterData.filter.forEach((it) => {\n            // Added for no-param-reassign lint errors\n            const deleteItem = it;\n            if (deleteItem.name === item.name) {\n                deleteItem.weight = 400;\n            }\n        });\n        let textComponentArray = [...textComponentsArray];\n        const index = textComponentArray.findIndex(\n            (x) => x.name === item.name && x.dataType === item.dataType\n        );\n        if (index !== -1) {\n            textComponentArray.splice(index, 1);\n        } else {\n            textComponentArray = [];\n        }\n        setTextComponentsArray(textComponentArray);\n    };\n\n    /**\n     * Method To reset the right drawer\n     */\n    const resetDrawer = () => {\n        deleteAutoCompleteElement({});\n        deleteDateTimeElement({});\n        deleteTextComponentElement({});\n        setApplyFilterChip({});\n        setRecentFilterShow(\"\");\n        setFilterShow(\"none\");\n    };\n\n    /**\n     * Method To save the filters\n     * @param {*} value is saved filter from the saved filter popup list\n     */\n    /* eslint-disable no-param-reassign */\n    const saveFilter = (value) => {\n        const obj = [];\n        if (value.length > 0) {\n            if (\n                !(\n                    autoCompletesValueArray.length > 0 ||\n                    dateTimesValueArray.length > 0 ||\n                    textComponentsValueArray.length > 0\n                )\n            ) {\n                setShowSavePopUp(\"\");\n                setSaveWarningClassName(\"text-danger\");\n                setSaveWarningLabel(\"No filters selected or values entered\");\n            } else {\n                const savedFilter = {\n                    filter: []\n                };\n                if (autoCompletesValueArray.length > 0) {\n                    const autoCompleteArray = [...autoCompletesArray];\n                    autoCompleteArray.map((item) => {\n                        const newItem = item;\n                        autoCompletesValueArray.forEach((valueItem) => {\n                            if (\n                                valueItem.name === item.name &&\n                                valueItem.type === item.type\n                            ) {\n                                newItem.validated = true;\n                                newItem.warning = \"\";\n                            }\n                        });\n                        return newItem;\n                    });\n                    setAutoCompletesArray(autoCompleteArray);\n                    let count = 0;\n                    autoCompletesArray.forEach((item) => {\n                        if (item.validated === false) {\n                            count++;\n                        }\n                    });\n                    if (count === 0) {\n                        savedFilter.filter.push({\n                            autoComplete: autoCompletesValueArray\n                        });\n                    } else {\n                        setShowSavePopUp(\"\");\n                        setSaveWarningClassName(\"text-danger\");\n                        setSaveWarningLabel(\"Enter values in every field\");\n                    }\n                } else {\n                    const autoCompleteArray = [...autoCompletesArray];\n                    autoCompleteArray.forEach((item) => {\n                        item.validated = false;\n                    });\n                    setAutoCompletesArray(autoCompleteArray);\n                }\n                if (dateTimesValueArray.length > 0) {\n                    const dateTimeArray = [...dateTimesArray];\n                    dateTimeArray.map((item) => {\n                        const newItem = item;\n                        dateTimesValueArray.forEach((valueItem) => {\n                            if (valueItem.name === item.name) {\n                                newItem.validated = true; // Added for no-param-reassign lint errors\n                                newItem.warning = \"\";\n                            }\n                        });\n                        return newItem;\n                    });\n                    setDateTimesArray(dateTimeArray);\n                    let count = 0;\n                    dateTimesArray.forEach((item) => {\n                        if (item.validated === false) {\n                            count++;\n                        }\n                    });\n                    if (count === 0) {\n                        savedFilter.filter.push({\n                            dateTime: dateTimesValueArray\n                        });\n                    } else {\n                        setShowSavePopUp(\"\");\n                        setSaveWarningClassName(\"text-danger\");\n                        setSaveWarningLabel(\"Enter values in every field\");\n                    }\n                } else {\n                    const dateTimeArray = [...dateTimesArray];\n                    dateTimeArray.forEach((item) => {\n                        item.validated = false;\n                    });\n                    setDateTimesArray(dateTimeArray);\n                }\n                if (textComponentsValueArray.length > 0) {\n                    const textComponentArray = [...textComponentsArray];\n                    textComponentArray.forEach((item) => {\n                        textComponentsValueArray.forEach((valueItem) => {\n                            if (valueItem.name === item.name) {\n                                item.validated = true;\n                                item.warning = \"\";\n                            }\n                        });\n                    });\n                    setTextComponentsArray(textComponentArray);\n                    let count = 0;\n                    textComponentArray.forEach((item) => {\n                        if (item.validated === false) {\n                            count++;\n                        }\n                    });\n                    if (count === 0) {\n                        savedFilter.filter.push({\n                            textComponent: textComponentsValueArray\n                        });\n                    } else {\n                        setShowSavePopUp(\"\");\n                        setSaveWarningClassName(\"text-danger\");\n                        setSaveWarningLabel(\"Enter values in every field\");\n                    }\n                } else {\n                    const textComponentArray = [...textComponentsArray];\n                    textComponentArray.forEach((item) => {\n                        item.validated = false;\n                    });\n                    setTextComponentsArray(textComponentArray);\n                }\n                if (savedFilter.filter.length > 0) {\n                    savedFilter[value] = savedFilter.filter;\n                    delete savedFilter.filter;\n                    let savedFilters = localStorage.getItem(\"savedFilters\");\n                    savedFilters = savedFilters ? JSON.parse(savedFilters) : [];\n                    savedFilters.push(savedFilter);\n                    localStorage.setItem(\n                        \"savedFilters\",\n                        JSON.stringify(savedFilters)\n                    );\n                    setShowSavePopUp(\"none\");\n                    setSaveWarningClassName(\"\");\n                    setSaveWarningLabel(\"\");\n                    resetDrawer();\n                }\n            }\n        } else {\n            setShowSavePopUp(\"\");\n            setSaveWarningClassName(\"text-danger\");\n            setSaveWarningLabel(\"Enter a valid filterName\");\n        }\n        autoCompletesValueArray.forEach((item) => {\n            obj.push({ ...item });\n        });\n        dateTimesValueArray.forEach((item) => {\n            obj.push({ ...item });\n        });\n        textComponentsValueArray.forEach((item) => {\n            obj.push({ ...item });\n        });\n        obj.forEach((objec) => {\n            delete objec.dataType;\n            delete objec.enabled;\n        });\n        props.savedFilters(obj);\n    };\n    /**\n     * Method To create the filter arrays for each specific type based on datatype\n     * @param {*} name is the name of the filter\n     * @param {*} dataType is the dataType of the filter\n     * @param {*} enabled is initial enabled status of the filter\n     * @param {*} type is the type array of the filter if present\n     * @param {*} field is the field array of the filter if present\n     * @param {*} condition is the condition array of the filter if present\n     * @param {*} options is the options array of the filter if present\n     */\n    /* eslint-disable no-param-reassign */\n    const fromLeftToRight = (\n        name,\n        dataType,\n        enabled,\n        type,\n        field,\n        condition,\n        dataSource,\n        warning,\n        options\n    ) => {\n        setShowSavePopUp(\"none\");\n        setSaveWarningLabel(\"\");\n        setSaveWarningClassName(\"\");\n        setEmptyFilterClassName(\"\");\n        setEmptyFilterWarning(\"\");\n        if (dataType === \"AutoComplete\") {\n            const value = {\n                name,\n                type,\n                dataType,\n                enabled,\n                objectArray: []\n            };\n            filterData.filter.forEach((item) => {\n                if (item.name === value.name) {\n                    item.weight = 700;\n                    item.types.forEach((tip) => {\n                        if (tip.name === value.type) {\n                            tip.weight = 600;\n                        }\n                    });\n                }\n            });\n            const autoCompleteArray = [...autoCompletesArray];\n            if (autoCompleteArray.length > 0) {\n                const index = autoCompleteArray.findIndex(\n                    (x) => x.name === value.name && x.type === value.type\n                );\n                if (index === -1) {\n                    autoCompleteArray.push({\n                        name,\n                        type,\n                        dataType,\n                        enabled,\n                        objectArray: options,\n                        validated: false,\n                        warning\n                    });\n                }\n            } else {\n                autoCompleteArray.push({\n                    name,\n                    type,\n                    dataType,\n                    enabled,\n                    objectArray: options,\n                    validated: false,\n                    warning\n                });\n            }\n            setAutoCompletesArray(autoCompleteArray);\n        }\n        if (dataType === \"DateTime\") {\n            const value = {\n                name,\n                dataType,\n                enabled,\n                field,\n                validated: false,\n                warning\n            };\n            filterData.filter.forEach((item) => {\n                if (item.name === value.name) {\n                    item.weight = 700;\n                }\n            });\n            const dateTimeArray = [...dateTimesArray];\n            if (dateTimeArray.length > 0) {\n                const index = dateTimeArray.findIndex(\n                    (x) => x.name === value.name && x.field === value.field\n                );\n                if (index === -1) {\n                    dateTimeArray.push({\n                        name,\n                        dataType,\n                        enabled,\n                        field,\n                        validated: false,\n                        warning\n                    });\n                }\n            } else {\n                dateTimeArray.push({\n                    name,\n                    dataType,\n                    enabled,\n                    field,\n                    validated: false,\n                    warning\n                });\n            }\n            setDateTimesArray(dateTimeArray);\n        }\n        if (dataType === \"Text\") {\n            const value = {\n                name,\n                dataType,\n                enabled,\n                validated: false,\n                warning\n            };\n            filterData.filter.forEach((item) => {\n                if (item.name === value.name) {\n                    item.weight = 700;\n                }\n            });\n            const textComponentArray = [...textComponentsArray];\n            if (textComponentArray.length > 0) {\n                const index = textComponentArray.findIndex(\n                    (x) =>\n                        x.name === value.name && x.dataType === value.dataType\n                );\n                if (index === -1) {\n                    textComponentArray.push({\n                        name,\n                        dataType,\n                        enabled,\n                        validated: false,\n                        warning\n                    });\n                }\n            } else {\n                textComponentArray.push({\n                    name,\n                    dataType,\n                    enabled,\n                    validated: false,\n                    warning\n                });\n            }\n            setTextComponentsArray(textComponentArray);\n        }\n    };\n    /**\n     * Method To create arrays containing values upon change trigger from respective input fields\n     * @param {*} item is the specific filter element object\n     * @param {*} valueArray is the selected multiselect options\n     */\n    /* eslint-disable no-param-reassign */\n    /* eslint-disable no-shadow */\n    const createAutoCompleteArray = (item, valueArray) => {\n        setShowSavePopUp(\"none\");\n        setSaveWarningLabel(\"\");\n        setSaveWarningClassName(\"\");\n        let autoCompleteArray = [...autoCompletesArray];\n        const tempObj = JSON.parse(JSON.stringify(item));\n        tempObj.value = valueArray;\n        const autoCompleteValueArray = [...autoCompletesValueArray];\n        if (autoCompleteValueArray.length > 0) {\n            const index_ = autoCompleteValueArray.findIndex(\n                (x) => x.name === tempObj.name && x.type === tempObj.type\n            );\n            if (index_ === -1) {\n                autoCompleteValueArray.push({\n                    name: tempObj.name,\n                    type: tempObj.type,\n                    dataType: tempObj.dataType,\n                    enabled: tempObj.enabled,\n                    value: tempObj.value\n                });\n            } else {\n                autoCompleteValueArray[index_].value = tempObj.value;\n            }\n\n            autoCompleteValueArray.forEach((valueItem) => {\n                autoCompleteArray.forEach((item) => {\n                    if (\n                        item.name === valueItem.name &&\n                        item.type === valueItem.type\n                    ) {\n                        item.validated = true;\n                        item.warning = \"\";\n                    }\n                });\n            });\n        } else {\n            autoCompleteValueArray.push({\n                name: tempObj.name,\n                type: tempObj.type,\n                dataType: tempObj.dataType,\n                enabled: tempObj.enabled,\n                value: tempObj.value\n            });\n            // eslint-disable-next-line no-shadow\n            autoCompleteValueArray.forEach((valueItem) => {\n                autoCompleteArray.forEach((item) => {\n                    if (\n                        item.name === valueItem.name &&\n                        item.type === valueItem.type\n                    ) {\n                        item.validated = true;\n                        item.warning = \"\";\n                    }\n                });\n            });\n        }\n        setAutoCompletesArray(autoCompleteArray);\n        autoCompleteArray = [];\n        setAutoCompletesValueArray(autoCompleteValueArray);\n    };\n\n    /**\n     * Method To toggle the switch to enable and disable the input fields\n     * @param {*} item is the specific filter element object\n     */\n    /* eslint-disable no-param-reassign */\n    const handleAutoCompleteEnabled = (item) => {\n        const autoCompleteArray = [...autoCompletesArray];\n        const index = autoCompleteArray.findIndex(\n            (x) => x.name === item.name && x.type === item.type\n        );\n        if (index !== -1) {\n            autoCompleteArray[index].enabled = !autoCompleteArray[index]\n                .enabled;\n        }\n        // eslint-disable-next-line no-shadow\n        setAutoCompletesArray(autoCompleteArray);\n        if (autoCompletesValueArray.length > 0) {\n            const autoCompleteValueArray = [...autoCompletesValueArray];\n            const index = autoCompleteValueArray.findIndex(\n                (x) => x.name === item.name && x.type === item.type\n            );\n            autoCompleteValueArray[index].enabled = !autoCompleteValueArray[\n                index\n            ].enabled;\n            setAutoCompletesValueArray(autoCompleteValueArray);\n        }\n    };\n\n    /**\n     * Method To toggle the switch to enable and disable the input fields\n     * @param {*} item is the specific filter element object\n     */\n    /* eslint-disable no-param-reassign */\n    const handleDateTimeEnabled = (item) => {\n        const dateTimeArray = [...dateTimesArray];\n        const index = dateTimeArray.findIndex(\n            (x) => x.name === item.name && x.field === item.field\n        );\n        if (index !== -1) {\n            dateTimeArray[index].enabled = !dateTimeArray[index].enabled;\n        }\n        setDateTimesArray(dateTimeArray);\n        // eslint-disable-next-line no-shadow\n        if (dateTimesValueArray.length > 0) {\n            const dateTimeValueArray = [...dateTimesValueArray];\n            const tempArray = [];\n            item.field.forEach((item) => {\n                tempArray.push(item.column);\n            });\n            const index = dateTimeValueArray.findIndex(\n                (x) => x.name === item.name && tempArray.includes(x.fieldValue)\n            );\n            if (index !== -1) {\n                dateTimeValueArray.forEach((item) => {\n                    item.enabled = !item.enabled;\n                });\n            }\n\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To create arrays containing values upon change trigger from respective input fields\n     * @param {*} item is the specific filter element object\n     * @param {*} fieldName is the specific type of field/date in which change is happening\n     * @param {*} value is value of the field\n     */\n    /* eslint-disable no-param-reassign */\n    const createDateTimeArray = (item, fieldName, value) => {\n        setShowSavePopUp(\"none\");\n        setSaveWarningLabel(\"\");\n        setSaveWarningClassName(\"\");\n        let dateTimeArray = [...dateTimesArray];\n        const tempObj = JSON.parse(JSON.stringify(item));\n        tempObj.fieldValue = fieldName;\n        tempObj.value = value;\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeValueArray.length > 0) {\n            const index = dateTimeValueArray.findIndex(\n                (x) =>\n                    x.fieldValue === tempObj.fieldValue &&\n                    x.name === tempObj.name\n            );\n            if (index === -1) {\n                dateTimeValueArray.push({\n                    name: tempObj.name,\n                    dataType: tempObj.dataType,\n                    enabled: tempObj.enabled,\n                    fieldValue: tempObj.fieldValue,\n                    value: tempObj.value\n                });\n            } else {\n                dateTimeValueArray[index].value = tempObj.value;\n            }\n            dateTimeValueArray.forEach((valueItem) => {\n                dateTimeArray.forEach((item) => {\n                    if (item.name === valueItem.name) {\n                        item.validated = true;\n                        item.warning = \"\";\n                    }\n                });\n            });\n        } else {\n            dateTimeValueArray.push({\n                name: tempObj.name,\n                dataType: tempObj.dataType,\n                enabled: tempObj.enabled,\n                fieldValue: tempObj.fieldValue,\n                value: tempObj.value\n            });\n            dateTimeValueArray.forEach((valueItem) => {\n                dateTimeArray.forEach((item) => {\n                    if (item.name === valueItem.name) {\n                        item.validated = true;\n                        item.warning = \"\";\n                    }\n                });\n            });\n        }\n        setDateTimesValueArray(dateTimeValueArray);\n        dateTimeArray = [...dateTimesArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field.forEach((fieldArray) => {\n                    if (fieldArray.column === fieldName) {\n                        fieldArray.value = value;\n                    }\n                });\n            });\n            setDateTimesArray(dateTimeArray);\n        }\n        dateTimeArray = [];\n    };\n    /**\n     * Method to Convert Date to required Format as per value of type\n     * @param {String} inputDate\n     * @param {String} type\n     */\n    const getValueOfDate = (dateValue) => {\n        const date = new Date(dateValue);\n        const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"numeric\",\n            seconds: \"numeric\"\n        });\n        const [\n            { value: month },\n            ,\n            { value: day },\n            ,\n            { value: year },\n            ,\n            { value: hour },\n            ,\n            { value: minute }\n        ] = dateTimeFormat.formatToParts(date);\n        return `${year}-${month}-${day}${\"T\"}${hour}:${minute}`;\n    };\n    /**\n     * Method To set both from date and to date as todays date\n     */\n    /* eslint-disable no-param-reassign */\n    const addToday = () => {\n        const todayDate = new Date();\n        const dated = getValueOfDate(todayDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        // eslint-disable-next-line no-shadow\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field.forEach((fieldArray) => {\n                    fieldArray.value = dated;\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((item) => {\n                            if (item.fieldValue === fieldArray.column) {\n                                item.value = dated;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: dated\n                        });\n                    }\n                });\n            });\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set both from date and to date as tomorrow's date\n     */\n    /* eslint-disable no-param-reassign */\n    const addTomorrow = () => {\n        let fromDate = new Date();\n        let toDate = new Date();\n        fromDate.setDate(fromDate.getDate() + 1);\n        toDate.setDate(toDate.getDate() + 1);\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as this month\n     */\n    /* eslint-disable no-param-reassign */\n    const addThisMonth = () => {\n        const today = new Date();\n        let fromDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        let toDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as next 14 days\n     */\n    /* eslint-disable no-param-reassign */\n    const addForteenDays = () => {\n        let fromDate = new Date();\n        let toDate = new Date();\n        fromDate.setDate(fromDate.getDate() + 1);\n        toDate.setDate(toDate.getDate() + 14);\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as next 7 days\n     */\n    /* eslint-disable no-param-reassign */\n    const addSevenDays = () => {\n        let fromDate = new Date();\n        let toDate = new Date();\n        fromDate.setDate(fromDate.getDate() + 1);\n        toDate.setDate(toDate.getDate() + 7);\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as current week Sunday to Saturday\n     */\n    /* eslint-disable no-param-reassign */\n    const addThisWeek = () => {\n        const today = new Date();\n        const from = today.getDate() - today.getDay();\n        const to = from + 6;\n        let fromDate = new Date(today.setDate(from)).toUTCString();\n        let toDate = new Date(today.setDate(to)).toUTCString();\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as next 30 days\n     */\n    /* eslint-disable no-param-reassign */\n    const addThirtyDays = () => {\n        const from = new Date();\n        const to = new Date();\n        from.setDate(from.getDate() + 1);\n        to.setDate(to.getDate() + 30);\n        const fromDate = getValueOfDate(from);\n        const toDate = getValueOfDate(to);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                item.field[0].value = fromDate;\n                item.field[1].value = toDate;\n                item.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            if (arr.fieldValue === fieldArray.column) {\n                                arr.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as next n days\n     * @param {*} value is the no: of days after today\n     */\n    const nextDayChange = (value) => {\n        if (value === \"\") {\n            value = 1;\n        }\n        let fromDate = new Date();\n        let toDate = new Date();\n        if (value !== \"0\") {\n            fromDate.setDate(fromDate.getDate() + 1);\n            toDate.setDate(toDate.getDate() + parseInt(value, 10));\n        }\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                // Added for no-param-reassign lint errors\n                const item_ = item;\n                item_.field[0].value = fromDate;\n                item_.field[1].value = toDate;\n                item_.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            // Added for no-param-reassign lint errors\n                            const arr_ = arr;\n                            if (arr_.fieldValue === fieldArray.column) {\n                                arr_.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item_.name,\n                            dataType: item_.dataType,\n                            enabled: item_.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To set the date range as last n days\n     * @param {*} value is the no: of days before today\n     */\n    const lastDayChange = (value) => {\n        if (value === \"\") {\n            value = 1;\n        }\n        let fromDate = new Date();\n        let toDate = new Date();\n        if (value !== \"0\") {\n            fromDate.setDate(fromDate.getDate() - parseInt(value, 10));\n            toDate.setDate(toDate.getDate() - 1);\n        }\n        fromDate = getValueOfDate(fromDate);\n        toDate = getValueOfDate(toDate);\n        const dateTimeArray = [...dateTimesArray];\n        const dateTimeValueArray = [...dateTimesValueArray];\n        if (dateTimeArray.length > 0) {\n            dateTimeArray.forEach((item) => {\n                // Added for no-param-reassign lint errors\n                const item_ = item;\n                item_.field[0].value = fromDate;\n                item_.field[1].value = toDate;\n                item_.field.forEach((fieldArray) => {\n                    if (dateTimeValueArray.length > 1) {\n                        dateTimeValueArray.forEach((arr) => {\n                            // Added for no-param-reassign lint errors\n                            const arr_ = arr;\n                            if (arr_.fieldValue === fieldArray.column) {\n                                arr_.value = fieldArray.value;\n                            }\n                        });\n                    } else {\n                        dateTimeValueArray.push({\n                            name: item_.name,\n                            dataType: item_.dataType,\n                            enabled: item_.enabled,\n                            fieldValue: fieldArray.column,\n                            value: fieldArray.value\n                        });\n                    }\n                });\n            });\n\n            setDateTimesArray(dateTimeArray);\n            setDateTimesValueArray(dateTimeValueArray);\n        }\n    };\n    /**\n     * Method To create arrays containing values upon change trigger from respective input fields\n     * @param {*} item is the specific filter element object\n     * @param {*} value is value of the input field\n     */\n    const createTextComponentsArray = (item, value) => {\n        setShowSavePopUp(\"none\");\n        setSaveWarningLabel(\"\");\n        setSaveWarningClassName(\"\");\n        const textComponentArray = [...textComponentsArray];\n        const textComponentValueArray = [...textComponentsValueArray];\n        if (textComponentValueArray.length > 0) {\n            const index = textComponentValueArray.findIndex(\n                (x) => x.name === item.name && x.dataType === item.dataType\n            );\n            if (index === -1) {\n                textComponentValueArray.push({\n                    name: item.name,\n                    dataType: item.dataType,\n                    enabled: item.enabled,\n                    value\n                });\n            } else {\n                textComponentValueArray[index].value = value;\n            }\n            textComponentValueArray.forEach((valueItem) => {\n                textComponentArray.forEach((items) => {\n                    // Added for no-param-reassign lint errors\n                    const item_ = items;\n                    if (item_.name === valueItem.name) {\n                        item_.validated = true;\n                        item_.warning = \"\";\n                    }\n                });\n            });\n        } else {\n            textComponentValueArray.push({\n                name: item.name,\n                dataType: item.dataType,\n                enabled: item.enabled,\n                value\n            });\n            textComponentValueArray.forEach((valueItem) => {\n                textComponentArray.forEach((textItem) => {\n                    // Added for no-param-reassign lint errors\n                    const item_ = textItem;\n                    if (item_.name === valueItem.name) {\n                        item_.validated = true;\n                        item_.warning = \"\";\n                    }\n                });\n            });\n        }\n        setTextComponentsValueArray(textComponentValueArray);\n    };\n    /**\n     * Method To toggle the switch to enable and disable the input fields\n     * @param {*} item is the specific filter element object\n     */\n    const handleTextComponentEnabled = (item) => {\n        const textComponentArray = [...textComponentsArray];\n        const index = textComponentArray.findIndex(\n            (x) => x.name === item.name && x.dataType === item.dataType\n        );\n        if (index !== -1) {\n            textComponentArray[index].enabled = !textComponentArray[index]\n                .enabled;\n        }\n        setTextComponentsArray(textComponentArray);\n        const textComponentValueArray = [...textComponentsValueArray];\n        if (textComponentValueArray.length > 0) {\n            // Added for no-param-reassign lint errors\n            const index_ = textComponentValueArray.findIndex(\n                (x) => x.name === item.name && x.dataType === item.dataType\n            );\n            if (index_ !== -1) {\n                textComponentValueArray[\n                    index_\n                ].enabled = !textComponentValueArray[index_].enabled;\n            }\n        }\n        setTextComponentsValueArray(textComponentValueArray);\n    };\n    /**\n     * Method To return the specific options array for autoComplete element\n     * @param {*} name is the name of the filter\n     * @param {*} typeName is the type of the filter\n     */\n    const returnOptions = (name, typeName) => {\n        let options = [];\n        filterData.filter.forEach((item) => {\n            if (item.name === name) {\n                item.types.forEach((type) => {\n                    if (type.name === typeName) {\n                        options = [...type.options];\n                    }\n                });\n            }\n        });\n        return options;\n    };\n\n    /**\n     * Method To map the applied filters to drawer on clicking the chips\n     * @param {*} items is the  filter element array\n     */\n    const addAppliedFilters = (items) => {\n        let autoComplete = [];\n        let dateTime = [];\n        let text = [];\n        items.forEach((item) => {\n            if (item.dataType === \"AutoComplete\") {\n                const autoCompleteArray = [...autoComplete];\n                const options = returnOptions(item.name, item.type);\n                if (autoCompleteArray.length > 0) {\n                    const index = autoCompleteArray.findIndex(\n                        (x) => x.name === item.name && item.type === x.type\n                    );\n\n                    if (index === -1) {\n                        autoCompleteArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            type: item.type,\n                            enabled: item.enabled,\n                            value: item.value,\n                            objectArray: options\n                        });\n                    }\n                } else {\n                    autoCompleteArray.push({\n                        name: item.name,\n                        dataType: item.dataType,\n                        type: item.type,\n                        enabled: item.enabled,\n                        value: item.value,\n                        objectArray: options\n                    });\n                }\n                autoComplete = autoCompleteArray;\n            } else if (item.dataType === \"DateTime\") {\n                const dateTimeArray = [...dateTime];\n                if (dateTimeArray.length === 0) {\n                    dateTimeArray.push({\n                        name: item.name,\n                        dataType: item.dataType,\n                        enabled: item.enabled,\n                        field: []\n                    });\n                    dateTimesValueArray.forEach((item_) => {\n                        // Added for no-param-reassign lint errors\n                        if (item_.fieldValue) {\n                            dateTimeArray.forEach((dt) => {\n                                dt.field.push({\n                                    column: item_.fieldValue,\n                                    value: item_.value\n                                });\n                            });\n                        }\n                    });\n                }\n                dateTime = dateTimeArray;\n            } else {\n                const textComponentArray = [...textComponentsArray];\n                if (textComponentArray.length > 0) {\n                    const index = textComponentArray.findIndex(\n                        (x) => x.name === item.name\n                    );\n                    if (index === -1) {\n                        textComponentArray.push({\n                            name: item.name,\n                            dataType: item.dataType,\n                            enabled: item.enabled,\n                            value: item.value\n                        });\n                    }\n                } else {\n                    textComponentArray.push({\n                        name: item.name,\n                        dataType: item.dataType,\n                        enabled: item.enabled,\n                        value: item.value\n                    });\n                }\n                text = textComponentArray;\n            }\n            setAutoCompletesArray(autoComplete);\n            setDateTimesArray(dateTime);\n            setTextComponentsArray(text);\n        });\n        // eslint-disable-next-line no-use-before-define\n        setApplyFilter(true);\n    };\n    /**\n     * Method To map the saved filters to drawer on clicking the specific saved filter name\n     * @param {*} item is the specific filter element object\n     */\n    const addSavedFilters = (item) => {\n        setFilterShow(\"\");\n        setRecentFilterShow(\"none\");\n        let autoComplete = [];\n        let text = [];\n        const tempArr = [];\n        const savedFilters = [];\n        Object.keys(item).forEach((key) => {\n            item[key].forEach((arrays) => {\n                Object.keys(arrays).forEach((key) => {\n                    tempArr.push(arrays[key]);\n                });\n            });\n        });\n        let arr = [];\n        tempArr.forEach((arrays) => {\n            arrays.forEach((array) => {\n                savedFilters.push(array);\n            });\n        });\n        savedFilters.forEach((items) => {\n            filterData.filter.forEach((fil) => {\n                if (fil.types.length) {\n                    const index = fil.types.findIndex(\n                        (x) => x.name === items.type && fil.name === items.name\n                    );\n                    if (index !== -1) {\n                        arr = fil.types[index].options;\n                    }\n                }\n            });\n            if (items.dataType === \"AutoComplete\") {\n                const autoCompleteArray = [...autoComplete];\n                if (autoCompleteArray.length > 0) {\n                    const index = autoCompleteArray.findIndex(\n                        (x) => x.name === items.name && items.type === x.type\n                    );\n                    if (index === -1) {\n                        autoCompleteArray.push({\n                            name: items.name,\n                            dataType: items.dataType,\n                            type: items.type,\n                            enabled: items.enabled,\n                            value: items.value,\n                            objectArray: arr\n                        });\n                    }\n                } else {\n                    autoCompleteArray.push({\n                        name: items.name,\n                        dataType: items.dataType,\n                        type: items.type,\n                        enabled: items.enabled,\n                        value: items.value,\n                        objectArray: arr\n                    });\n                }\n                autoComplete = autoCompleteArray;\n            }\n        });\n        setAutoCompletesArray(autoComplete);\n        const saveTempDateTimeArray = [];\n        savedFilters.forEach((items) => {\n            if (items.dataType === \"DateTime\") {\n                if (saveTempDateTimeArray.length === 0) {\n                    saveTempDateTimeArray.push({\n                        name: items.name,\n                        dataType: items.dataType,\n                        enabled: items.enabled,\n                        field: []\n                    });\n                }\n            }\n        });\n        savedFilters.forEach((saved) => {\n            if (saved.dataType === \"DateTime\") {\n                if (saveTempDateTimeArray.length > 0) {\n                    saveTempDateTimeArray.forEach((filter) => {\n                        filter.field.push({\n                            column: saved.fieldValue,\n                            value: saved.value\n                        });\n                    });\n                }\n            }\n        });\n        setDateTimesArray(saveTempDateTimeArray);\n        savedFilters.forEach((items) => {\n            if (items.dataType === \"Text\") {\n                const textComponentArray = [...text];\n                if (textComponentArray.length > 0) {\n                    const index = textComponentArray.findIndex(\n                        (x) => x.name === items.name\n                    );\n                    if (index === -1) {\n                        textComponentArray.push({\n                            name: items.name,\n                            dataType: items.dataType,\n                            enabled: items.enabled,\n                            value: items.value\n                        });\n                    }\n                } else {\n                    textComponentArray.push({\n                        name: items.name,\n                        dataType: items.dataType,\n                        enabled: items.enabled,\n                        value: items.value\n                    });\n                }\n                text = textComponentArray;\n            }\n        });\n        setTextComponentsArray(text);\n        // eslint-disable-next-line no-use-before-define\n        setApplyFilter(true);\n    };\n\n    const { ref, showApplyFilter, setApplyFilter } = useComponentVisible();\n    return (\n        <div ref={ref}>\n            {showApplyFilter && (\n                <div className=\"neo-filter filter--grid\" ref={ref}>\n                    <div className=\"filter__wrap\">\n                        <div className=\"filter__list\">\n                            <LeftDrawer\n                                filterData={filterData}\n                                fromLeftToRight={fromLeftToRight}\n                            />\n                        </div>\n                        <div className=\"filter__inputwrap\">\n                            <RightDrawer\n                                applyFilter={applyFilter}\n                                saveFilter={saveFilter}\n                                createAutoCompleteArray={\n                                    createAutoCompleteArray\n                                }\n                                handleAutoCompleteEnabled={\n                                    handleAutoCompleteEnabled\n                                }\n                                deleteAutoCompleteElement={\n                                    deleteAutoCompleteElement\n                                }\n                                autoCompleteArray={autoCompletesArray}\n                                dateTimesArray={dateTimesArray}\n                                deleteDateTimeElement={deleteDateTimeElement}\n                                handleDateTimeEnabled={handleDateTimeEnabled}\n                                createDateTimeArray={createDateTimeArray}\n                                addToday={addToday}\n                                addTomorrow={addTomorrow}\n                                addThisMonth={addThisMonth}\n                                addForteenDays={addForteenDays}\n                                addSevenDays={addSevenDays}\n                                addThisWeek={addThisWeek}\n                                addThirtyDays={addThirtyDays}\n                                lastDayChange={lastDayChange}\n                                nextDayChange={nextDayChange}\n                                textComponentsArray={textComponentsArray}\n                                deleteTextComponentElement={\n                                    deleteTextComponentElement\n                                }\n                                createTextComponentsArray={\n                                    createTextComponentsArray\n                                }\n                                handleTextComponentEnabled={\n                                    handleTextComponentEnabled\n                                }\n                                closeDrawer={closeDrawer}\n                                resetDrawer={resetDrawer}\n                                filterCount={filterCount}\n                                saveWarningClassName={saveWarningClassName}\n                                saveWarningLabel={saveWarningLabel}\n                                showSavePopUp={showSavePopUp}\n                                emptyFilterClassName={emptyFilterClassName}\n                                emptyFilterWarning={emptyFilterWarning}\n                                openShowSavePopUp={openShowSavePopUp}\n                                recentFilterShow={recentFilterShow}\n                                filterShow={filterShow}\n                                addSavedFilters={addSavedFilters}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <MainFilterPanel\n                showDrawer={showDrawer}\n                applyFilterChip={applyFilterChip}\n                addAppliedFilters={addAppliedFilters}\n                addSavedFilters={addSavedFilters}\n                addingToFavourite={props.addingToFavourite}\n            />\n        </div>\n    );\n}\n\nFilter.propTypes = {\n    filterData: PropTypes.any,\n    addingToFavourite: PropTypes.any,\n    appliedFilters: PropTypes.any,\n    savedFilters: PropTypes.any\n};\n","import React from \"react\";\nimport Filter from \"filter\";\nimport FilterData from \"./data.json\";\nexport default function App() {\n    /**\n     * Following are the field arrays to be provided for the dropDown option\n     * Theses arrays with the key value pairs are recieved/mounted\n     */\n    const airport = [\n        { key: \"AAA\", value: \"AAA\" },\n        { key: \"AAB\", value: \"AAB\" },\n        { key: \"ABA\", value: \"ABA\" },\n        { key: \"ABB\", value: \"ABB\" },\n        { key: \"BBA\", value: \"BBA\" },\n        { key: \"BAA\", value: \"BAA\" },\n        { key: \"BBB\", value: \"BBB\" }\n    ];\n    const airportGroup = [\n        { key: \"AAA\", value: \"AAA\" },\n        { key: \"AAB\", value: \"AAB\" },\n        { key: \"ABA\", value: \"ABA\" },\n        { key: \"ABB\", value: \"ABB\" },\n        { key: \"BBA\", value: \"BBA\" },\n        { key: \"BAA\", value: \"BAA\" },\n        { key: \"BBB\", value: \"BBB\" }\n    ];\n    /**\n     * This is where the recieved array of dropdown options are redefined with the passing filter object\n     */\n    FilterData.filter.forEach((item) => {\n        if (item.types) {\n            for (let i in item.types) {\n                if (item.types[i].dataSource === \"Airport\") {\n                    item.types[i].options = airport;\n                } else {\n                    item.types[i].options = airportGroup;\n                }\n            }\n        }\n    });\n    /**\n     * Method displaying the applied filters at that moment\n     * @param {*} appliedFilter is the specific applied filters array\n     */\n    const appliedFilters = (appliedFilter) => {\n        console.log(\"appliedFilter:\", appliedFilter);\n    };\n    /**\n     * Method displaying the saved filters at that moment\n     * @param {*} savedFilter is the specific saved filters array\n     */\n    const savedFilters = (savedFilter) => {\n        console.log(\"savedFilter:\", savedFilter);\n    };\n    /**\n     * Method displaying the favourite filters\n     * @param {*} favourite is the favourite filter array that just got added as favourite\n     */\n    const addingToFavourite = (favourite) => {\n        console.log(favourite);\n    };\n    return (\n        <Filter\n            filterData={FilterData}\n            appliedFilters={appliedFilters}\n            savedFilters={savedFilters}\n        />\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}